
btest1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001274  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a0  08001414  08001414  00011414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014b4  080014b4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080014b4  080014b4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014b4  080014b4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014b4  080014b4  000114b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014b8  080014b8  000114b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080014bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   000023e5  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000062c  00000000  00000000  00022473  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00022aa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e0  00000000  00000000  00022bb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c1b  00000000  00000000  00022c98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001361  00000000  00000000  000258b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009787  00000000  00000000  00026c14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0003039b  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b44  00000000  00000000  000303f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080013fc 	.word	0x080013fc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080013fc 	.word	0x080013fc

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b086      	sub	sp, #24
 8000284:	af00      	add	r7, sp, #0
	uint32_t *pClkctrlreg = (uint32_t*)0x4002104C;
 8000286:	4b1e      	ldr	r3, [pc, #120]	; (8000300 <main+0x80>)
 8000288:	60fb      	str	r3, [r7, #12]
	uint32_t *pPortAModeReg = (uint32_t*)0x48000000;
 800028a:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800028e:	60bb      	str	r3, [r7, #8]
	uint32_t *pPortAOutReg = (uint32_t*)0x48000014;
 8000290:	4b1c      	ldr	r3, [pc, #112]	; (8000304 <main+0x84>)
 8000292:	607b      	str	r3, [r7, #4]

	//1. Enable clock control register (RCC_AHB2ENR)
	*pClkctrlreg |= 0x01;
 8000294:	68fb      	ldr	r3, [r7, #12]
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	f043 0201 	orr.w	r2, r3, #1
 800029c:	68fb      	ldr	r3, [r7, #12]
 800029e:	601a      	str	r2, [r3, #0]
	//2.Configure the mode of the IO pin as output
	//a. Clear 10th and 11th bit position
	*pPortAModeReg &= 0xFFFFF3FF;
 80002a0:	68bb      	ldr	r3, [r7, #8]
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 80002a8:	68bb      	ldr	r3, [r7, #8]
 80002aa:	601a      	str	r2, [r3, #0]
	//b. make 10th bit position as 1 (SET)
	*pPortAModeReg |= 0x00000400;
 80002ac:	68bb      	ldr	r3, [r7, #8]
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80002b4:	68bb      	ldr	r3, [r7, #8]
 80002b6:	601a      	str	r2, [r3, #0]
	//3. GPIOA output data register (used to write)
	//*pPortDOutReg |= 0x0020;
	/* Loop forever */
	while(1)
	{
		*pPortAOutReg |= 0x0020;
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	f043 0220 	orr.w	r2, r3, #32
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	601a      	str	r2, [r3, #0]
		printf("ON");
 80002c4:	4810      	ldr	r0, [pc, #64]	; (8000308 <main+0x88>)
 80002c6:	f000 f947 	bl	8000558 <iprintf>

		for(uint32_t i=0; i<300000; i++);
 80002ca:	2300      	movs	r3, #0
 80002cc:	617b      	str	r3, [r7, #20]
 80002ce:	e002      	b.n	80002d6 <main+0x56>
 80002d0:	697b      	ldr	r3, [r7, #20]
 80002d2:	3301      	adds	r3, #1
 80002d4:	617b      	str	r3, [r7, #20]
 80002d6:	697b      	ldr	r3, [r7, #20]
 80002d8:	4a0c      	ldr	r2, [pc, #48]	; (800030c <main+0x8c>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d9f8      	bls.n	80002d0 <main+0x50>

		*pPortAOutReg &= 0x0000;
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	2200      	movs	r2, #0
 80002e2:	601a      	str	r2, [r3, #0]
		printf("OFF");
 80002e4:	480a      	ldr	r0, [pc, #40]	; (8000310 <main+0x90>)
 80002e6:	f000 f937 	bl	8000558 <iprintf>

		for(uint32_t i=0; i<300000 ;i++);
 80002ea:	2300      	movs	r3, #0
 80002ec:	613b      	str	r3, [r7, #16]
 80002ee:	e002      	b.n	80002f6 <main+0x76>
 80002f0:	693b      	ldr	r3, [r7, #16]
 80002f2:	3301      	adds	r3, #1
 80002f4:	613b      	str	r3, [r7, #16]
 80002f6:	693b      	ldr	r3, [r7, #16]
 80002f8:	4a04      	ldr	r2, [pc, #16]	; (800030c <main+0x8c>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d9f8      	bls.n	80002f0 <main+0x70>
		*pPortAOutReg |= 0x0020;
 80002fe:	e7db      	b.n	80002b8 <main+0x38>
 8000300:	4002104c 	.word	0x4002104c
 8000304:	48000014 	.word	0x48000014
 8000308:	08001414 	.word	0x08001414
 800030c:	000493df 	.word	0x000493df
 8000310:	08001418 	.word	0x08001418

08000314 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000314:	b480      	push	{r7}
 8000316:	b083      	sub	sp, #12
 8000318:	af00      	add	r7, sp, #0
 800031a:	4603      	mov	r3, r0
 800031c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800031e:	4b0e      	ldr	r3, [pc, #56]	; (8000358 <ITM_SendChar+0x44>)
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	4a0d      	ldr	r2, [pc, #52]	; (8000358 <ITM_SendChar+0x44>)
 8000324:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000328:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800032a:	4b0c      	ldr	r3, [pc, #48]	; (800035c <ITM_SendChar+0x48>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	4a0b      	ldr	r2, [pc, #44]	; (800035c <ITM_SendChar+0x48>)
 8000330:	f043 0301 	orr.w	r3, r3, #1
 8000334:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000336:	bf00      	nop
 8000338:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	f003 0301 	and.w	r3, r3, #1
 8000342:	2b00      	cmp	r3, #0
 8000344:	d0f8      	beq.n	8000338 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000346:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800034a:	79fb      	ldrb	r3, [r7, #7]
 800034c:	6013      	str	r3, [r2, #0]
}
 800034e:	bf00      	nop
 8000350:	370c      	adds	r7, #12
 8000352:	46bd      	mov	sp, r7
 8000354:	bc80      	pop	{r7}
 8000356:	4770      	bx	lr
 8000358:	e000edfc 	.word	0xe000edfc
 800035c:	e0000e00 	.word	0xe0000e00

08000360 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b086      	sub	sp, #24
 8000364:	af00      	add	r7, sp, #0
 8000366:	60f8      	str	r0, [r7, #12]
 8000368:	60b9      	str	r1, [r7, #8]
 800036a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036c:	2300      	movs	r3, #0
 800036e:	617b      	str	r3, [r7, #20]
 8000370:	e00a      	b.n	8000388 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000372:	f3af 8000 	nop.w
 8000376:	4601      	mov	r1, r0
 8000378:	68bb      	ldr	r3, [r7, #8]
 800037a:	1c5a      	adds	r2, r3, #1
 800037c:	60ba      	str	r2, [r7, #8]
 800037e:	b2ca      	uxtb	r2, r1
 8000380:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000382:	697b      	ldr	r3, [r7, #20]
 8000384:	3301      	adds	r3, #1
 8000386:	617b      	str	r3, [r7, #20]
 8000388:	697a      	ldr	r2, [r7, #20]
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	429a      	cmp	r2, r3
 800038e:	dbf0      	blt.n	8000372 <_read+0x12>
	}

return len;
 8000390:	687b      	ldr	r3, [r7, #4]
}
 8000392:	4618      	mov	r0, r3
 8000394:	3718      	adds	r7, #24
 8000396:	46bd      	mov	sp, r7
 8000398:	bd80      	pop	{r7, pc}

0800039a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800039a:	b580      	push	{r7, lr}
 800039c:	b086      	sub	sp, #24
 800039e:	af00      	add	r7, sp, #0
 80003a0:	60f8      	str	r0, [r7, #12]
 80003a2:	60b9      	str	r1, [r7, #8]
 80003a4:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a6:	2300      	movs	r3, #0
 80003a8:	617b      	str	r3, [r7, #20]
 80003aa:	e009      	b.n	80003c0 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80003ac:	68bb      	ldr	r3, [r7, #8]
 80003ae:	1c5a      	adds	r2, r3, #1
 80003b0:	60ba      	str	r2, [r7, #8]
 80003b2:	781b      	ldrb	r3, [r3, #0]
 80003b4:	4618      	mov	r0, r3
 80003b6:	f7ff ffad 	bl	8000314 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ba:	697b      	ldr	r3, [r7, #20]
 80003bc:	3301      	adds	r3, #1
 80003be:	617b      	str	r3, [r7, #20]
 80003c0:	697a      	ldr	r2, [r7, #20]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	429a      	cmp	r2, r3
 80003c6:	dbf1      	blt.n	80003ac <_write+0x12>
	}
	return len;
 80003c8:	687b      	ldr	r3, [r7, #4]
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	3718      	adds	r7, #24
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bd80      	pop	{r7, pc}

080003d2 <_close>:

int _close(int file)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b083      	sub	sp, #12
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	6078      	str	r0, [r7, #4]
	return -1;
 80003da:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003de:	4618      	mov	r0, r3
 80003e0:	370c      	adds	r7, #12
 80003e2:	46bd      	mov	sp, r7
 80003e4:	bc80      	pop	{r7}
 80003e6:	4770      	bx	lr

080003e8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003e8:	b480      	push	{r7}
 80003ea:	b083      	sub	sp, #12
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	6078      	str	r0, [r7, #4]
 80003f0:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003f2:	683b      	ldr	r3, [r7, #0]
 80003f4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003f8:	605a      	str	r2, [r3, #4]
	return 0;
 80003fa:	2300      	movs	r3, #0
}
 80003fc:	4618      	mov	r0, r3
 80003fe:	370c      	adds	r7, #12
 8000400:	46bd      	mov	sp, r7
 8000402:	bc80      	pop	{r7}
 8000404:	4770      	bx	lr

08000406 <_isatty>:

int _isatty(int file)
{
 8000406:	b480      	push	{r7}
 8000408:	b083      	sub	sp, #12
 800040a:	af00      	add	r7, sp, #0
 800040c:	6078      	str	r0, [r7, #4]
	return 1;
 800040e:	2301      	movs	r3, #1
}
 8000410:	4618      	mov	r0, r3
 8000412:	370c      	adds	r7, #12
 8000414:	46bd      	mov	sp, r7
 8000416:	bc80      	pop	{r7}
 8000418:	4770      	bx	lr

0800041a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800041a:	b480      	push	{r7}
 800041c:	b085      	sub	sp, #20
 800041e:	af00      	add	r7, sp, #0
 8000420:	60f8      	str	r0, [r7, #12]
 8000422:	60b9      	str	r1, [r7, #8]
 8000424:	607a      	str	r2, [r7, #4]
	return 0;
 8000426:	2300      	movs	r3, #0
}
 8000428:	4618      	mov	r0, r3
 800042a:	3714      	adds	r7, #20
 800042c:	46bd      	mov	sp, r7
 800042e:	bc80      	pop	{r7}
 8000430:	4770      	bx	lr
	...

08000434 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000434:	b580      	push	{r7, lr}
 8000436:	b086      	sub	sp, #24
 8000438:	af00      	add	r7, sp, #0
 800043a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800043c:	4a14      	ldr	r2, [pc, #80]	; (8000490 <_sbrk+0x5c>)
 800043e:	4b15      	ldr	r3, [pc, #84]	; (8000494 <_sbrk+0x60>)
 8000440:	1ad3      	subs	r3, r2, r3
 8000442:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000444:	697b      	ldr	r3, [r7, #20]
 8000446:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000448:	4b13      	ldr	r3, [pc, #76]	; (8000498 <_sbrk+0x64>)
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	2b00      	cmp	r3, #0
 800044e:	d102      	bne.n	8000456 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000450:	4b11      	ldr	r3, [pc, #68]	; (8000498 <_sbrk+0x64>)
 8000452:	4a12      	ldr	r2, [pc, #72]	; (800049c <_sbrk+0x68>)
 8000454:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000456:	4b10      	ldr	r3, [pc, #64]	; (8000498 <_sbrk+0x64>)
 8000458:	681a      	ldr	r2, [r3, #0]
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	4413      	add	r3, r2
 800045e:	693a      	ldr	r2, [r7, #16]
 8000460:	429a      	cmp	r2, r3
 8000462:	d207      	bcs.n	8000474 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000464:	f000 f846 	bl	80004f4 <__errno>
 8000468:	4603      	mov	r3, r0
 800046a:	220c      	movs	r2, #12
 800046c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800046e:	f04f 33ff 	mov.w	r3, #4294967295
 8000472:	e009      	b.n	8000488 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000474:	4b08      	ldr	r3, [pc, #32]	; (8000498 <_sbrk+0x64>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800047a:	4b07      	ldr	r3, [pc, #28]	; (8000498 <_sbrk+0x64>)
 800047c:	681a      	ldr	r2, [r3, #0]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4413      	add	r3, r2
 8000482:	4a05      	ldr	r2, [pc, #20]	; (8000498 <_sbrk+0x64>)
 8000484:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000486:	68fb      	ldr	r3, [r7, #12]
}
 8000488:	4618      	mov	r0, r3
 800048a:	3718      	adds	r7, #24
 800048c:	46bd      	mov	sp, r7
 800048e:	bd80      	pop	{r7, pc}
 8000490:	20018000 	.word	0x20018000
 8000494:	00000400 	.word	0x00000400
 8000498:	20000080 	.word	0x20000080
 800049c:	200000a0 	.word	0x200000a0

080004a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a0:	480d      	ldr	r0, [pc, #52]	; (80004d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004a2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80004a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004a8:	480c      	ldr	r0, [pc, #48]	; (80004dc <LoopForever+0x6>)
  ldr r1, =_edata
 80004aa:	490d      	ldr	r1, [pc, #52]	; (80004e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004ac:	4a0d      	ldr	r2, [pc, #52]	; (80004e4 <LoopForever+0xe>)
  movs r3, #0
 80004ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004b0:	e002      	b.n	80004b8 <LoopCopyDataInit>

080004b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004b6:	3304      	adds	r3, #4

080004b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004bc:	d3f9      	bcc.n	80004b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004be:	4a0a      	ldr	r2, [pc, #40]	; (80004e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004c0:	4c0a      	ldr	r4, [pc, #40]	; (80004ec <LoopForever+0x16>)
  movs r3, #0
 80004c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004c4:	e001      	b.n	80004ca <LoopFillZerobss>

080004c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004c8:	3204      	adds	r2, #4

080004ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004cc:	d3fb      	bcc.n	80004c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004ce:	f000 f817 	bl	8000500 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004d2:	f7ff fed5 	bl	8000280 <main>

080004d6 <LoopForever>:

LoopForever:
    b LoopForever
 80004d6:	e7fe      	b.n	80004d6 <LoopForever>
  ldr   r0, =_estack
 80004d8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80004dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004e4:	080014bc 	.word	0x080014bc
  ldr r2, =_sbss
 80004e8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004ec:	2000009c 	.word	0x2000009c

080004f0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f0:	e7fe      	b.n	80004f0 <ADC1_2_IRQHandler>
	...

080004f4 <__errno>:
 80004f4:	4b01      	ldr	r3, [pc, #4]	; (80004fc <__errno+0x8>)
 80004f6:	6818      	ldr	r0, [r3, #0]
 80004f8:	4770      	bx	lr
 80004fa:	bf00      	nop
 80004fc:	20000000 	.word	0x20000000

08000500 <__libc_init_array>:
 8000500:	b570      	push	{r4, r5, r6, lr}
 8000502:	4d0d      	ldr	r5, [pc, #52]	; (8000538 <__libc_init_array+0x38>)
 8000504:	4c0d      	ldr	r4, [pc, #52]	; (800053c <__libc_init_array+0x3c>)
 8000506:	1b64      	subs	r4, r4, r5
 8000508:	10a4      	asrs	r4, r4, #2
 800050a:	2600      	movs	r6, #0
 800050c:	42a6      	cmp	r6, r4
 800050e:	d109      	bne.n	8000524 <__libc_init_array+0x24>
 8000510:	4d0b      	ldr	r5, [pc, #44]	; (8000540 <__libc_init_array+0x40>)
 8000512:	4c0c      	ldr	r4, [pc, #48]	; (8000544 <__libc_init_array+0x44>)
 8000514:	f000 ff72 	bl	80013fc <_init>
 8000518:	1b64      	subs	r4, r4, r5
 800051a:	10a4      	asrs	r4, r4, #2
 800051c:	2600      	movs	r6, #0
 800051e:	42a6      	cmp	r6, r4
 8000520:	d105      	bne.n	800052e <__libc_init_array+0x2e>
 8000522:	bd70      	pop	{r4, r5, r6, pc}
 8000524:	f855 3b04 	ldr.w	r3, [r5], #4
 8000528:	4798      	blx	r3
 800052a:	3601      	adds	r6, #1
 800052c:	e7ee      	b.n	800050c <__libc_init_array+0xc>
 800052e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000532:	4798      	blx	r3
 8000534:	3601      	adds	r6, #1
 8000536:	e7f2      	b.n	800051e <__libc_init_array+0x1e>
 8000538:	080014b4 	.word	0x080014b4
 800053c:	080014b4 	.word	0x080014b4
 8000540:	080014b4 	.word	0x080014b4
 8000544:	080014b8 	.word	0x080014b8

08000548 <memset>:
 8000548:	4402      	add	r2, r0
 800054a:	4603      	mov	r3, r0
 800054c:	4293      	cmp	r3, r2
 800054e:	d100      	bne.n	8000552 <memset+0xa>
 8000550:	4770      	bx	lr
 8000552:	f803 1b01 	strb.w	r1, [r3], #1
 8000556:	e7f9      	b.n	800054c <memset+0x4>

08000558 <iprintf>:
 8000558:	b40f      	push	{r0, r1, r2, r3}
 800055a:	4b0a      	ldr	r3, [pc, #40]	; (8000584 <iprintf+0x2c>)
 800055c:	b513      	push	{r0, r1, r4, lr}
 800055e:	681c      	ldr	r4, [r3, #0]
 8000560:	b124      	cbz	r4, 800056c <iprintf+0x14>
 8000562:	69a3      	ldr	r3, [r4, #24]
 8000564:	b913      	cbnz	r3, 800056c <iprintf+0x14>
 8000566:	4620      	mov	r0, r4
 8000568:	f000 f866 	bl	8000638 <__sinit>
 800056c:	ab05      	add	r3, sp, #20
 800056e:	9a04      	ldr	r2, [sp, #16]
 8000570:	68a1      	ldr	r1, [r4, #8]
 8000572:	9301      	str	r3, [sp, #4]
 8000574:	4620      	mov	r0, r4
 8000576:	f000 f981 	bl	800087c <_vfiprintf_r>
 800057a:	b002      	add	sp, #8
 800057c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000580:	b004      	add	sp, #16
 8000582:	4770      	bx	lr
 8000584:	20000000 	.word	0x20000000

08000588 <std>:
 8000588:	2300      	movs	r3, #0
 800058a:	b510      	push	{r4, lr}
 800058c:	4604      	mov	r4, r0
 800058e:	e9c0 3300 	strd	r3, r3, [r0]
 8000592:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000596:	6083      	str	r3, [r0, #8]
 8000598:	8181      	strh	r1, [r0, #12]
 800059a:	6643      	str	r3, [r0, #100]	; 0x64
 800059c:	81c2      	strh	r2, [r0, #14]
 800059e:	6183      	str	r3, [r0, #24]
 80005a0:	4619      	mov	r1, r3
 80005a2:	2208      	movs	r2, #8
 80005a4:	305c      	adds	r0, #92	; 0x5c
 80005a6:	f7ff ffcf 	bl	8000548 <memset>
 80005aa:	4b05      	ldr	r3, [pc, #20]	; (80005c0 <std+0x38>)
 80005ac:	6263      	str	r3, [r4, #36]	; 0x24
 80005ae:	4b05      	ldr	r3, [pc, #20]	; (80005c4 <std+0x3c>)
 80005b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005b2:	4b05      	ldr	r3, [pc, #20]	; (80005c8 <std+0x40>)
 80005b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005b6:	4b05      	ldr	r3, [pc, #20]	; (80005cc <std+0x44>)
 80005b8:	6224      	str	r4, [r4, #32]
 80005ba:	6323      	str	r3, [r4, #48]	; 0x30
 80005bc:	bd10      	pop	{r4, pc}
 80005be:	bf00      	nop
 80005c0:	08000e25 	.word	0x08000e25
 80005c4:	08000e47 	.word	0x08000e47
 80005c8:	08000e7f 	.word	0x08000e7f
 80005cc:	08000ea3 	.word	0x08000ea3

080005d0 <_cleanup_r>:
 80005d0:	4901      	ldr	r1, [pc, #4]	; (80005d8 <_cleanup_r+0x8>)
 80005d2:	f000 b8af 	b.w	8000734 <_fwalk_reent>
 80005d6:	bf00      	nop
 80005d8:	0800117d 	.word	0x0800117d

080005dc <__sfmoreglue>:
 80005dc:	b570      	push	{r4, r5, r6, lr}
 80005de:	1e4a      	subs	r2, r1, #1
 80005e0:	2568      	movs	r5, #104	; 0x68
 80005e2:	4355      	muls	r5, r2
 80005e4:	460e      	mov	r6, r1
 80005e6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80005ea:	f000 f8c5 	bl	8000778 <_malloc_r>
 80005ee:	4604      	mov	r4, r0
 80005f0:	b140      	cbz	r0, 8000604 <__sfmoreglue+0x28>
 80005f2:	2100      	movs	r1, #0
 80005f4:	e9c0 1600 	strd	r1, r6, [r0]
 80005f8:	300c      	adds	r0, #12
 80005fa:	60a0      	str	r0, [r4, #8]
 80005fc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000600:	f7ff ffa2 	bl	8000548 <memset>
 8000604:	4620      	mov	r0, r4
 8000606:	bd70      	pop	{r4, r5, r6, pc}

08000608 <__sfp_lock_acquire>:
 8000608:	4801      	ldr	r0, [pc, #4]	; (8000610 <__sfp_lock_acquire+0x8>)
 800060a:	f000 b8b3 	b.w	8000774 <__retarget_lock_acquire_recursive>
 800060e:	bf00      	nop
 8000610:	20000094 	.word	0x20000094

08000614 <__sfp_lock_release>:
 8000614:	4801      	ldr	r0, [pc, #4]	; (800061c <__sfp_lock_release+0x8>)
 8000616:	f000 b8ae 	b.w	8000776 <__retarget_lock_release_recursive>
 800061a:	bf00      	nop
 800061c:	20000094 	.word	0x20000094

08000620 <__sinit_lock_acquire>:
 8000620:	4801      	ldr	r0, [pc, #4]	; (8000628 <__sinit_lock_acquire+0x8>)
 8000622:	f000 b8a7 	b.w	8000774 <__retarget_lock_acquire_recursive>
 8000626:	bf00      	nop
 8000628:	2000008f 	.word	0x2000008f

0800062c <__sinit_lock_release>:
 800062c:	4801      	ldr	r0, [pc, #4]	; (8000634 <__sinit_lock_release+0x8>)
 800062e:	f000 b8a2 	b.w	8000776 <__retarget_lock_release_recursive>
 8000632:	bf00      	nop
 8000634:	2000008f 	.word	0x2000008f

08000638 <__sinit>:
 8000638:	b510      	push	{r4, lr}
 800063a:	4604      	mov	r4, r0
 800063c:	f7ff fff0 	bl	8000620 <__sinit_lock_acquire>
 8000640:	69a3      	ldr	r3, [r4, #24]
 8000642:	b11b      	cbz	r3, 800064c <__sinit+0x14>
 8000644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000648:	f7ff bff0 	b.w	800062c <__sinit_lock_release>
 800064c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000650:	6523      	str	r3, [r4, #80]	; 0x50
 8000652:	4b13      	ldr	r3, [pc, #76]	; (80006a0 <__sinit+0x68>)
 8000654:	4a13      	ldr	r2, [pc, #76]	; (80006a4 <__sinit+0x6c>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	62a2      	str	r2, [r4, #40]	; 0x28
 800065a:	42a3      	cmp	r3, r4
 800065c:	bf04      	itt	eq
 800065e:	2301      	moveq	r3, #1
 8000660:	61a3      	streq	r3, [r4, #24]
 8000662:	4620      	mov	r0, r4
 8000664:	f000 f820 	bl	80006a8 <__sfp>
 8000668:	6060      	str	r0, [r4, #4]
 800066a:	4620      	mov	r0, r4
 800066c:	f000 f81c 	bl	80006a8 <__sfp>
 8000670:	60a0      	str	r0, [r4, #8]
 8000672:	4620      	mov	r0, r4
 8000674:	f000 f818 	bl	80006a8 <__sfp>
 8000678:	2200      	movs	r2, #0
 800067a:	60e0      	str	r0, [r4, #12]
 800067c:	2104      	movs	r1, #4
 800067e:	6860      	ldr	r0, [r4, #4]
 8000680:	f7ff ff82 	bl	8000588 <std>
 8000684:	68a0      	ldr	r0, [r4, #8]
 8000686:	2201      	movs	r2, #1
 8000688:	2109      	movs	r1, #9
 800068a:	f7ff ff7d 	bl	8000588 <std>
 800068e:	68e0      	ldr	r0, [r4, #12]
 8000690:	2202      	movs	r2, #2
 8000692:	2112      	movs	r1, #18
 8000694:	f7ff ff78 	bl	8000588 <std>
 8000698:	2301      	movs	r3, #1
 800069a:	61a3      	str	r3, [r4, #24]
 800069c:	e7d2      	b.n	8000644 <__sinit+0xc>
 800069e:	bf00      	nop
 80006a0:	0800141c 	.word	0x0800141c
 80006a4:	080005d1 	.word	0x080005d1

080006a8 <__sfp>:
 80006a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006aa:	4607      	mov	r7, r0
 80006ac:	f7ff ffac 	bl	8000608 <__sfp_lock_acquire>
 80006b0:	4b1e      	ldr	r3, [pc, #120]	; (800072c <__sfp+0x84>)
 80006b2:	681e      	ldr	r6, [r3, #0]
 80006b4:	69b3      	ldr	r3, [r6, #24]
 80006b6:	b913      	cbnz	r3, 80006be <__sfp+0x16>
 80006b8:	4630      	mov	r0, r6
 80006ba:	f7ff ffbd 	bl	8000638 <__sinit>
 80006be:	3648      	adds	r6, #72	; 0x48
 80006c0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80006c4:	3b01      	subs	r3, #1
 80006c6:	d503      	bpl.n	80006d0 <__sfp+0x28>
 80006c8:	6833      	ldr	r3, [r6, #0]
 80006ca:	b30b      	cbz	r3, 8000710 <__sfp+0x68>
 80006cc:	6836      	ldr	r6, [r6, #0]
 80006ce:	e7f7      	b.n	80006c0 <__sfp+0x18>
 80006d0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80006d4:	b9d5      	cbnz	r5, 800070c <__sfp+0x64>
 80006d6:	4b16      	ldr	r3, [pc, #88]	; (8000730 <__sfp+0x88>)
 80006d8:	60e3      	str	r3, [r4, #12]
 80006da:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80006de:	6665      	str	r5, [r4, #100]	; 0x64
 80006e0:	f000 f847 	bl	8000772 <__retarget_lock_init_recursive>
 80006e4:	f7ff ff96 	bl	8000614 <__sfp_lock_release>
 80006e8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80006ec:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80006f0:	6025      	str	r5, [r4, #0]
 80006f2:	61a5      	str	r5, [r4, #24]
 80006f4:	2208      	movs	r2, #8
 80006f6:	4629      	mov	r1, r5
 80006f8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80006fc:	f7ff ff24 	bl	8000548 <memset>
 8000700:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000704:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000708:	4620      	mov	r0, r4
 800070a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800070c:	3468      	adds	r4, #104	; 0x68
 800070e:	e7d9      	b.n	80006c4 <__sfp+0x1c>
 8000710:	2104      	movs	r1, #4
 8000712:	4638      	mov	r0, r7
 8000714:	f7ff ff62 	bl	80005dc <__sfmoreglue>
 8000718:	4604      	mov	r4, r0
 800071a:	6030      	str	r0, [r6, #0]
 800071c:	2800      	cmp	r0, #0
 800071e:	d1d5      	bne.n	80006cc <__sfp+0x24>
 8000720:	f7ff ff78 	bl	8000614 <__sfp_lock_release>
 8000724:	230c      	movs	r3, #12
 8000726:	603b      	str	r3, [r7, #0]
 8000728:	e7ee      	b.n	8000708 <__sfp+0x60>
 800072a:	bf00      	nop
 800072c:	0800141c 	.word	0x0800141c
 8000730:	ffff0001 	.word	0xffff0001

08000734 <_fwalk_reent>:
 8000734:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000738:	4606      	mov	r6, r0
 800073a:	4688      	mov	r8, r1
 800073c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000740:	2700      	movs	r7, #0
 8000742:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000746:	f1b9 0901 	subs.w	r9, r9, #1
 800074a:	d505      	bpl.n	8000758 <_fwalk_reent+0x24>
 800074c:	6824      	ldr	r4, [r4, #0]
 800074e:	2c00      	cmp	r4, #0
 8000750:	d1f7      	bne.n	8000742 <_fwalk_reent+0xe>
 8000752:	4638      	mov	r0, r7
 8000754:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000758:	89ab      	ldrh	r3, [r5, #12]
 800075a:	2b01      	cmp	r3, #1
 800075c:	d907      	bls.n	800076e <_fwalk_reent+0x3a>
 800075e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000762:	3301      	adds	r3, #1
 8000764:	d003      	beq.n	800076e <_fwalk_reent+0x3a>
 8000766:	4629      	mov	r1, r5
 8000768:	4630      	mov	r0, r6
 800076a:	47c0      	blx	r8
 800076c:	4307      	orrs	r7, r0
 800076e:	3568      	adds	r5, #104	; 0x68
 8000770:	e7e9      	b.n	8000746 <_fwalk_reent+0x12>

08000772 <__retarget_lock_init_recursive>:
 8000772:	4770      	bx	lr

08000774 <__retarget_lock_acquire_recursive>:
 8000774:	4770      	bx	lr

08000776 <__retarget_lock_release_recursive>:
 8000776:	4770      	bx	lr

08000778 <_malloc_r>:
 8000778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800077a:	1ccd      	adds	r5, r1, #3
 800077c:	f025 0503 	bic.w	r5, r5, #3
 8000780:	3508      	adds	r5, #8
 8000782:	2d0c      	cmp	r5, #12
 8000784:	bf38      	it	cc
 8000786:	250c      	movcc	r5, #12
 8000788:	2d00      	cmp	r5, #0
 800078a:	4606      	mov	r6, r0
 800078c:	db01      	blt.n	8000792 <_malloc_r+0x1a>
 800078e:	42a9      	cmp	r1, r5
 8000790:	d903      	bls.n	800079a <_malloc_r+0x22>
 8000792:	230c      	movs	r3, #12
 8000794:	6033      	str	r3, [r6, #0]
 8000796:	2000      	movs	r0, #0
 8000798:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800079a:	f000 fda1 	bl	80012e0 <__malloc_lock>
 800079e:	4921      	ldr	r1, [pc, #132]	; (8000824 <_malloc_r+0xac>)
 80007a0:	680a      	ldr	r2, [r1, #0]
 80007a2:	4614      	mov	r4, r2
 80007a4:	b99c      	cbnz	r4, 80007ce <_malloc_r+0x56>
 80007a6:	4f20      	ldr	r7, [pc, #128]	; (8000828 <_malloc_r+0xb0>)
 80007a8:	683b      	ldr	r3, [r7, #0]
 80007aa:	b923      	cbnz	r3, 80007b6 <_malloc_r+0x3e>
 80007ac:	4621      	mov	r1, r4
 80007ae:	4630      	mov	r0, r6
 80007b0:	f000 fb28 	bl	8000e04 <_sbrk_r>
 80007b4:	6038      	str	r0, [r7, #0]
 80007b6:	4629      	mov	r1, r5
 80007b8:	4630      	mov	r0, r6
 80007ba:	f000 fb23 	bl	8000e04 <_sbrk_r>
 80007be:	1c43      	adds	r3, r0, #1
 80007c0:	d123      	bne.n	800080a <_malloc_r+0x92>
 80007c2:	230c      	movs	r3, #12
 80007c4:	6033      	str	r3, [r6, #0]
 80007c6:	4630      	mov	r0, r6
 80007c8:	f000 fd90 	bl	80012ec <__malloc_unlock>
 80007cc:	e7e3      	b.n	8000796 <_malloc_r+0x1e>
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	1b5b      	subs	r3, r3, r5
 80007d2:	d417      	bmi.n	8000804 <_malloc_r+0x8c>
 80007d4:	2b0b      	cmp	r3, #11
 80007d6:	d903      	bls.n	80007e0 <_malloc_r+0x68>
 80007d8:	6023      	str	r3, [r4, #0]
 80007da:	441c      	add	r4, r3
 80007dc:	6025      	str	r5, [r4, #0]
 80007de:	e004      	b.n	80007ea <_malloc_r+0x72>
 80007e0:	6863      	ldr	r3, [r4, #4]
 80007e2:	42a2      	cmp	r2, r4
 80007e4:	bf0c      	ite	eq
 80007e6:	600b      	streq	r3, [r1, #0]
 80007e8:	6053      	strne	r3, [r2, #4]
 80007ea:	4630      	mov	r0, r6
 80007ec:	f000 fd7e 	bl	80012ec <__malloc_unlock>
 80007f0:	f104 000b 	add.w	r0, r4, #11
 80007f4:	1d23      	adds	r3, r4, #4
 80007f6:	f020 0007 	bic.w	r0, r0, #7
 80007fa:	1ac2      	subs	r2, r0, r3
 80007fc:	d0cc      	beq.n	8000798 <_malloc_r+0x20>
 80007fe:	1a1b      	subs	r3, r3, r0
 8000800:	50a3      	str	r3, [r4, r2]
 8000802:	e7c9      	b.n	8000798 <_malloc_r+0x20>
 8000804:	4622      	mov	r2, r4
 8000806:	6864      	ldr	r4, [r4, #4]
 8000808:	e7cc      	b.n	80007a4 <_malloc_r+0x2c>
 800080a:	1cc4      	adds	r4, r0, #3
 800080c:	f024 0403 	bic.w	r4, r4, #3
 8000810:	42a0      	cmp	r0, r4
 8000812:	d0e3      	beq.n	80007dc <_malloc_r+0x64>
 8000814:	1a21      	subs	r1, r4, r0
 8000816:	4630      	mov	r0, r6
 8000818:	f000 faf4 	bl	8000e04 <_sbrk_r>
 800081c:	3001      	adds	r0, #1
 800081e:	d1dd      	bne.n	80007dc <_malloc_r+0x64>
 8000820:	e7cf      	b.n	80007c2 <_malloc_r+0x4a>
 8000822:	bf00      	nop
 8000824:	20000084 	.word	0x20000084
 8000828:	20000088 	.word	0x20000088

0800082c <__sfputc_r>:
 800082c:	6893      	ldr	r3, [r2, #8]
 800082e:	3b01      	subs	r3, #1
 8000830:	2b00      	cmp	r3, #0
 8000832:	b410      	push	{r4}
 8000834:	6093      	str	r3, [r2, #8]
 8000836:	da07      	bge.n	8000848 <__sfputc_r+0x1c>
 8000838:	6994      	ldr	r4, [r2, #24]
 800083a:	42a3      	cmp	r3, r4
 800083c:	db01      	blt.n	8000842 <__sfputc_r+0x16>
 800083e:	290a      	cmp	r1, #10
 8000840:	d102      	bne.n	8000848 <__sfputc_r+0x1c>
 8000842:	bc10      	pop	{r4}
 8000844:	f000 bb32 	b.w	8000eac <__swbuf_r>
 8000848:	6813      	ldr	r3, [r2, #0]
 800084a:	1c58      	adds	r0, r3, #1
 800084c:	6010      	str	r0, [r2, #0]
 800084e:	7019      	strb	r1, [r3, #0]
 8000850:	4608      	mov	r0, r1
 8000852:	bc10      	pop	{r4}
 8000854:	4770      	bx	lr

08000856 <__sfputs_r>:
 8000856:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000858:	4606      	mov	r6, r0
 800085a:	460f      	mov	r7, r1
 800085c:	4614      	mov	r4, r2
 800085e:	18d5      	adds	r5, r2, r3
 8000860:	42ac      	cmp	r4, r5
 8000862:	d101      	bne.n	8000868 <__sfputs_r+0x12>
 8000864:	2000      	movs	r0, #0
 8000866:	e007      	b.n	8000878 <__sfputs_r+0x22>
 8000868:	f814 1b01 	ldrb.w	r1, [r4], #1
 800086c:	463a      	mov	r2, r7
 800086e:	4630      	mov	r0, r6
 8000870:	f7ff ffdc 	bl	800082c <__sfputc_r>
 8000874:	1c43      	adds	r3, r0, #1
 8000876:	d1f3      	bne.n	8000860 <__sfputs_r+0xa>
 8000878:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800087c <_vfiprintf_r>:
 800087c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000880:	460d      	mov	r5, r1
 8000882:	b09d      	sub	sp, #116	; 0x74
 8000884:	4614      	mov	r4, r2
 8000886:	4698      	mov	r8, r3
 8000888:	4606      	mov	r6, r0
 800088a:	b118      	cbz	r0, 8000894 <_vfiprintf_r+0x18>
 800088c:	6983      	ldr	r3, [r0, #24]
 800088e:	b90b      	cbnz	r3, 8000894 <_vfiprintf_r+0x18>
 8000890:	f7ff fed2 	bl	8000638 <__sinit>
 8000894:	4b89      	ldr	r3, [pc, #548]	; (8000abc <_vfiprintf_r+0x240>)
 8000896:	429d      	cmp	r5, r3
 8000898:	d11b      	bne.n	80008d2 <_vfiprintf_r+0x56>
 800089a:	6875      	ldr	r5, [r6, #4]
 800089c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800089e:	07d9      	lsls	r1, r3, #31
 80008a0:	d405      	bmi.n	80008ae <_vfiprintf_r+0x32>
 80008a2:	89ab      	ldrh	r3, [r5, #12]
 80008a4:	059a      	lsls	r2, r3, #22
 80008a6:	d402      	bmi.n	80008ae <_vfiprintf_r+0x32>
 80008a8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008aa:	f7ff ff63 	bl	8000774 <__retarget_lock_acquire_recursive>
 80008ae:	89ab      	ldrh	r3, [r5, #12]
 80008b0:	071b      	lsls	r3, r3, #28
 80008b2:	d501      	bpl.n	80008b8 <_vfiprintf_r+0x3c>
 80008b4:	692b      	ldr	r3, [r5, #16]
 80008b6:	b9eb      	cbnz	r3, 80008f4 <_vfiprintf_r+0x78>
 80008b8:	4629      	mov	r1, r5
 80008ba:	4630      	mov	r0, r6
 80008bc:	f000 fb5a 	bl	8000f74 <__swsetup_r>
 80008c0:	b1c0      	cbz	r0, 80008f4 <_vfiprintf_r+0x78>
 80008c2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008c4:	07dc      	lsls	r4, r3, #31
 80008c6:	d50e      	bpl.n	80008e6 <_vfiprintf_r+0x6a>
 80008c8:	f04f 30ff 	mov.w	r0, #4294967295
 80008cc:	b01d      	add	sp, #116	; 0x74
 80008ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80008d2:	4b7b      	ldr	r3, [pc, #492]	; (8000ac0 <_vfiprintf_r+0x244>)
 80008d4:	429d      	cmp	r5, r3
 80008d6:	d101      	bne.n	80008dc <_vfiprintf_r+0x60>
 80008d8:	68b5      	ldr	r5, [r6, #8]
 80008da:	e7df      	b.n	800089c <_vfiprintf_r+0x20>
 80008dc:	4b79      	ldr	r3, [pc, #484]	; (8000ac4 <_vfiprintf_r+0x248>)
 80008de:	429d      	cmp	r5, r3
 80008e0:	bf08      	it	eq
 80008e2:	68f5      	ldreq	r5, [r6, #12]
 80008e4:	e7da      	b.n	800089c <_vfiprintf_r+0x20>
 80008e6:	89ab      	ldrh	r3, [r5, #12]
 80008e8:	0598      	lsls	r0, r3, #22
 80008ea:	d4ed      	bmi.n	80008c8 <_vfiprintf_r+0x4c>
 80008ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008ee:	f7ff ff42 	bl	8000776 <__retarget_lock_release_recursive>
 80008f2:	e7e9      	b.n	80008c8 <_vfiprintf_r+0x4c>
 80008f4:	2300      	movs	r3, #0
 80008f6:	9309      	str	r3, [sp, #36]	; 0x24
 80008f8:	2320      	movs	r3, #32
 80008fa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80008fe:	f8cd 800c 	str.w	r8, [sp, #12]
 8000902:	2330      	movs	r3, #48	; 0x30
 8000904:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000ac8 <_vfiprintf_r+0x24c>
 8000908:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800090c:	f04f 0901 	mov.w	r9, #1
 8000910:	4623      	mov	r3, r4
 8000912:	469a      	mov	sl, r3
 8000914:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000918:	b10a      	cbz	r2, 800091e <_vfiprintf_r+0xa2>
 800091a:	2a25      	cmp	r2, #37	; 0x25
 800091c:	d1f9      	bne.n	8000912 <_vfiprintf_r+0x96>
 800091e:	ebba 0b04 	subs.w	fp, sl, r4
 8000922:	d00b      	beq.n	800093c <_vfiprintf_r+0xc0>
 8000924:	465b      	mov	r3, fp
 8000926:	4622      	mov	r2, r4
 8000928:	4629      	mov	r1, r5
 800092a:	4630      	mov	r0, r6
 800092c:	f7ff ff93 	bl	8000856 <__sfputs_r>
 8000930:	3001      	adds	r0, #1
 8000932:	f000 80aa 	beq.w	8000a8a <_vfiprintf_r+0x20e>
 8000936:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000938:	445a      	add	r2, fp
 800093a:	9209      	str	r2, [sp, #36]	; 0x24
 800093c:	f89a 3000 	ldrb.w	r3, [sl]
 8000940:	2b00      	cmp	r3, #0
 8000942:	f000 80a2 	beq.w	8000a8a <_vfiprintf_r+0x20e>
 8000946:	2300      	movs	r3, #0
 8000948:	f04f 32ff 	mov.w	r2, #4294967295
 800094c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000950:	f10a 0a01 	add.w	sl, sl, #1
 8000954:	9304      	str	r3, [sp, #16]
 8000956:	9307      	str	r3, [sp, #28]
 8000958:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800095c:	931a      	str	r3, [sp, #104]	; 0x68
 800095e:	4654      	mov	r4, sl
 8000960:	2205      	movs	r2, #5
 8000962:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000966:	4858      	ldr	r0, [pc, #352]	; (8000ac8 <_vfiprintf_r+0x24c>)
 8000968:	f7ff fc3a 	bl	80001e0 <memchr>
 800096c:	9a04      	ldr	r2, [sp, #16]
 800096e:	b9d8      	cbnz	r0, 80009a8 <_vfiprintf_r+0x12c>
 8000970:	06d1      	lsls	r1, r2, #27
 8000972:	bf44      	itt	mi
 8000974:	2320      	movmi	r3, #32
 8000976:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800097a:	0713      	lsls	r3, r2, #28
 800097c:	bf44      	itt	mi
 800097e:	232b      	movmi	r3, #43	; 0x2b
 8000980:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000984:	f89a 3000 	ldrb.w	r3, [sl]
 8000988:	2b2a      	cmp	r3, #42	; 0x2a
 800098a:	d015      	beq.n	80009b8 <_vfiprintf_r+0x13c>
 800098c:	9a07      	ldr	r2, [sp, #28]
 800098e:	4654      	mov	r4, sl
 8000990:	2000      	movs	r0, #0
 8000992:	f04f 0c0a 	mov.w	ip, #10
 8000996:	4621      	mov	r1, r4
 8000998:	f811 3b01 	ldrb.w	r3, [r1], #1
 800099c:	3b30      	subs	r3, #48	; 0x30
 800099e:	2b09      	cmp	r3, #9
 80009a0:	d94e      	bls.n	8000a40 <_vfiprintf_r+0x1c4>
 80009a2:	b1b0      	cbz	r0, 80009d2 <_vfiprintf_r+0x156>
 80009a4:	9207      	str	r2, [sp, #28]
 80009a6:	e014      	b.n	80009d2 <_vfiprintf_r+0x156>
 80009a8:	eba0 0308 	sub.w	r3, r0, r8
 80009ac:	fa09 f303 	lsl.w	r3, r9, r3
 80009b0:	4313      	orrs	r3, r2
 80009b2:	9304      	str	r3, [sp, #16]
 80009b4:	46a2      	mov	sl, r4
 80009b6:	e7d2      	b.n	800095e <_vfiprintf_r+0xe2>
 80009b8:	9b03      	ldr	r3, [sp, #12]
 80009ba:	1d19      	adds	r1, r3, #4
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	9103      	str	r1, [sp, #12]
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	bfbb      	ittet	lt
 80009c4:	425b      	neglt	r3, r3
 80009c6:	f042 0202 	orrlt.w	r2, r2, #2
 80009ca:	9307      	strge	r3, [sp, #28]
 80009cc:	9307      	strlt	r3, [sp, #28]
 80009ce:	bfb8      	it	lt
 80009d0:	9204      	strlt	r2, [sp, #16]
 80009d2:	7823      	ldrb	r3, [r4, #0]
 80009d4:	2b2e      	cmp	r3, #46	; 0x2e
 80009d6:	d10c      	bne.n	80009f2 <_vfiprintf_r+0x176>
 80009d8:	7863      	ldrb	r3, [r4, #1]
 80009da:	2b2a      	cmp	r3, #42	; 0x2a
 80009dc:	d135      	bne.n	8000a4a <_vfiprintf_r+0x1ce>
 80009de:	9b03      	ldr	r3, [sp, #12]
 80009e0:	1d1a      	adds	r2, r3, #4
 80009e2:	681b      	ldr	r3, [r3, #0]
 80009e4:	9203      	str	r2, [sp, #12]
 80009e6:	2b00      	cmp	r3, #0
 80009e8:	bfb8      	it	lt
 80009ea:	f04f 33ff 	movlt.w	r3, #4294967295
 80009ee:	3402      	adds	r4, #2
 80009f0:	9305      	str	r3, [sp, #20]
 80009f2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000ad8 <_vfiprintf_r+0x25c>
 80009f6:	7821      	ldrb	r1, [r4, #0]
 80009f8:	2203      	movs	r2, #3
 80009fa:	4650      	mov	r0, sl
 80009fc:	f7ff fbf0 	bl	80001e0 <memchr>
 8000a00:	b140      	cbz	r0, 8000a14 <_vfiprintf_r+0x198>
 8000a02:	2340      	movs	r3, #64	; 0x40
 8000a04:	eba0 000a 	sub.w	r0, r0, sl
 8000a08:	fa03 f000 	lsl.w	r0, r3, r0
 8000a0c:	9b04      	ldr	r3, [sp, #16]
 8000a0e:	4303      	orrs	r3, r0
 8000a10:	3401      	adds	r4, #1
 8000a12:	9304      	str	r3, [sp, #16]
 8000a14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a18:	482c      	ldr	r0, [pc, #176]	; (8000acc <_vfiprintf_r+0x250>)
 8000a1a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a1e:	2206      	movs	r2, #6
 8000a20:	f7ff fbde 	bl	80001e0 <memchr>
 8000a24:	2800      	cmp	r0, #0
 8000a26:	d03f      	beq.n	8000aa8 <_vfiprintf_r+0x22c>
 8000a28:	4b29      	ldr	r3, [pc, #164]	; (8000ad0 <_vfiprintf_r+0x254>)
 8000a2a:	bb1b      	cbnz	r3, 8000a74 <_vfiprintf_r+0x1f8>
 8000a2c:	9b03      	ldr	r3, [sp, #12]
 8000a2e:	3307      	adds	r3, #7
 8000a30:	f023 0307 	bic.w	r3, r3, #7
 8000a34:	3308      	adds	r3, #8
 8000a36:	9303      	str	r3, [sp, #12]
 8000a38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a3a:	443b      	add	r3, r7
 8000a3c:	9309      	str	r3, [sp, #36]	; 0x24
 8000a3e:	e767      	b.n	8000910 <_vfiprintf_r+0x94>
 8000a40:	fb0c 3202 	mla	r2, ip, r2, r3
 8000a44:	460c      	mov	r4, r1
 8000a46:	2001      	movs	r0, #1
 8000a48:	e7a5      	b.n	8000996 <_vfiprintf_r+0x11a>
 8000a4a:	2300      	movs	r3, #0
 8000a4c:	3401      	adds	r4, #1
 8000a4e:	9305      	str	r3, [sp, #20]
 8000a50:	4619      	mov	r1, r3
 8000a52:	f04f 0c0a 	mov.w	ip, #10
 8000a56:	4620      	mov	r0, r4
 8000a58:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a5c:	3a30      	subs	r2, #48	; 0x30
 8000a5e:	2a09      	cmp	r2, #9
 8000a60:	d903      	bls.n	8000a6a <_vfiprintf_r+0x1ee>
 8000a62:	2b00      	cmp	r3, #0
 8000a64:	d0c5      	beq.n	80009f2 <_vfiprintf_r+0x176>
 8000a66:	9105      	str	r1, [sp, #20]
 8000a68:	e7c3      	b.n	80009f2 <_vfiprintf_r+0x176>
 8000a6a:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a6e:	4604      	mov	r4, r0
 8000a70:	2301      	movs	r3, #1
 8000a72:	e7f0      	b.n	8000a56 <_vfiprintf_r+0x1da>
 8000a74:	ab03      	add	r3, sp, #12
 8000a76:	9300      	str	r3, [sp, #0]
 8000a78:	462a      	mov	r2, r5
 8000a7a:	4b16      	ldr	r3, [pc, #88]	; (8000ad4 <_vfiprintf_r+0x258>)
 8000a7c:	a904      	add	r1, sp, #16
 8000a7e:	4630      	mov	r0, r6
 8000a80:	f3af 8000 	nop.w
 8000a84:	4607      	mov	r7, r0
 8000a86:	1c78      	adds	r0, r7, #1
 8000a88:	d1d6      	bne.n	8000a38 <_vfiprintf_r+0x1bc>
 8000a8a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a8c:	07d9      	lsls	r1, r3, #31
 8000a8e:	d405      	bmi.n	8000a9c <_vfiprintf_r+0x220>
 8000a90:	89ab      	ldrh	r3, [r5, #12]
 8000a92:	059a      	lsls	r2, r3, #22
 8000a94:	d402      	bmi.n	8000a9c <_vfiprintf_r+0x220>
 8000a96:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a98:	f7ff fe6d 	bl	8000776 <__retarget_lock_release_recursive>
 8000a9c:	89ab      	ldrh	r3, [r5, #12]
 8000a9e:	065b      	lsls	r3, r3, #25
 8000aa0:	f53f af12 	bmi.w	80008c8 <_vfiprintf_r+0x4c>
 8000aa4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000aa6:	e711      	b.n	80008cc <_vfiprintf_r+0x50>
 8000aa8:	ab03      	add	r3, sp, #12
 8000aaa:	9300      	str	r3, [sp, #0]
 8000aac:	462a      	mov	r2, r5
 8000aae:	4b09      	ldr	r3, [pc, #36]	; (8000ad4 <_vfiprintf_r+0x258>)
 8000ab0:	a904      	add	r1, sp, #16
 8000ab2:	4630      	mov	r0, r6
 8000ab4:	f000 f880 	bl	8000bb8 <_printf_i>
 8000ab8:	e7e4      	b.n	8000a84 <_vfiprintf_r+0x208>
 8000aba:	bf00      	nop
 8000abc:	08001440 	.word	0x08001440
 8000ac0:	08001460 	.word	0x08001460
 8000ac4:	08001420 	.word	0x08001420
 8000ac8:	08001480 	.word	0x08001480
 8000acc:	0800148a 	.word	0x0800148a
 8000ad0:	00000000 	.word	0x00000000
 8000ad4:	08000857 	.word	0x08000857
 8000ad8:	08001486 	.word	0x08001486

08000adc <_printf_common>:
 8000adc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ae0:	4616      	mov	r6, r2
 8000ae2:	4699      	mov	r9, r3
 8000ae4:	688a      	ldr	r2, [r1, #8]
 8000ae6:	690b      	ldr	r3, [r1, #16]
 8000ae8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000aec:	4293      	cmp	r3, r2
 8000aee:	bfb8      	it	lt
 8000af0:	4613      	movlt	r3, r2
 8000af2:	6033      	str	r3, [r6, #0]
 8000af4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000af8:	4607      	mov	r7, r0
 8000afa:	460c      	mov	r4, r1
 8000afc:	b10a      	cbz	r2, 8000b02 <_printf_common+0x26>
 8000afe:	3301      	adds	r3, #1
 8000b00:	6033      	str	r3, [r6, #0]
 8000b02:	6823      	ldr	r3, [r4, #0]
 8000b04:	0699      	lsls	r1, r3, #26
 8000b06:	bf42      	ittt	mi
 8000b08:	6833      	ldrmi	r3, [r6, #0]
 8000b0a:	3302      	addmi	r3, #2
 8000b0c:	6033      	strmi	r3, [r6, #0]
 8000b0e:	6825      	ldr	r5, [r4, #0]
 8000b10:	f015 0506 	ands.w	r5, r5, #6
 8000b14:	d106      	bne.n	8000b24 <_printf_common+0x48>
 8000b16:	f104 0a19 	add.w	sl, r4, #25
 8000b1a:	68e3      	ldr	r3, [r4, #12]
 8000b1c:	6832      	ldr	r2, [r6, #0]
 8000b1e:	1a9b      	subs	r3, r3, r2
 8000b20:	42ab      	cmp	r3, r5
 8000b22:	dc26      	bgt.n	8000b72 <_printf_common+0x96>
 8000b24:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000b28:	1e13      	subs	r3, r2, #0
 8000b2a:	6822      	ldr	r2, [r4, #0]
 8000b2c:	bf18      	it	ne
 8000b2e:	2301      	movne	r3, #1
 8000b30:	0692      	lsls	r2, r2, #26
 8000b32:	d42b      	bmi.n	8000b8c <_printf_common+0xb0>
 8000b34:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b38:	4649      	mov	r1, r9
 8000b3a:	4638      	mov	r0, r7
 8000b3c:	47c0      	blx	r8
 8000b3e:	3001      	adds	r0, #1
 8000b40:	d01e      	beq.n	8000b80 <_printf_common+0xa4>
 8000b42:	6823      	ldr	r3, [r4, #0]
 8000b44:	68e5      	ldr	r5, [r4, #12]
 8000b46:	6832      	ldr	r2, [r6, #0]
 8000b48:	f003 0306 	and.w	r3, r3, #6
 8000b4c:	2b04      	cmp	r3, #4
 8000b4e:	bf08      	it	eq
 8000b50:	1aad      	subeq	r5, r5, r2
 8000b52:	68a3      	ldr	r3, [r4, #8]
 8000b54:	6922      	ldr	r2, [r4, #16]
 8000b56:	bf0c      	ite	eq
 8000b58:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b5c:	2500      	movne	r5, #0
 8000b5e:	4293      	cmp	r3, r2
 8000b60:	bfc4      	itt	gt
 8000b62:	1a9b      	subgt	r3, r3, r2
 8000b64:	18ed      	addgt	r5, r5, r3
 8000b66:	2600      	movs	r6, #0
 8000b68:	341a      	adds	r4, #26
 8000b6a:	42b5      	cmp	r5, r6
 8000b6c:	d11a      	bne.n	8000ba4 <_printf_common+0xc8>
 8000b6e:	2000      	movs	r0, #0
 8000b70:	e008      	b.n	8000b84 <_printf_common+0xa8>
 8000b72:	2301      	movs	r3, #1
 8000b74:	4652      	mov	r2, sl
 8000b76:	4649      	mov	r1, r9
 8000b78:	4638      	mov	r0, r7
 8000b7a:	47c0      	blx	r8
 8000b7c:	3001      	adds	r0, #1
 8000b7e:	d103      	bne.n	8000b88 <_printf_common+0xac>
 8000b80:	f04f 30ff 	mov.w	r0, #4294967295
 8000b84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b88:	3501      	adds	r5, #1
 8000b8a:	e7c6      	b.n	8000b1a <_printf_common+0x3e>
 8000b8c:	18e1      	adds	r1, r4, r3
 8000b8e:	1c5a      	adds	r2, r3, #1
 8000b90:	2030      	movs	r0, #48	; 0x30
 8000b92:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000b96:	4422      	add	r2, r4
 8000b98:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000b9c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000ba0:	3302      	adds	r3, #2
 8000ba2:	e7c7      	b.n	8000b34 <_printf_common+0x58>
 8000ba4:	2301      	movs	r3, #1
 8000ba6:	4622      	mov	r2, r4
 8000ba8:	4649      	mov	r1, r9
 8000baa:	4638      	mov	r0, r7
 8000bac:	47c0      	blx	r8
 8000bae:	3001      	adds	r0, #1
 8000bb0:	d0e6      	beq.n	8000b80 <_printf_common+0xa4>
 8000bb2:	3601      	adds	r6, #1
 8000bb4:	e7d9      	b.n	8000b6a <_printf_common+0x8e>
	...

08000bb8 <_printf_i>:
 8000bb8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000bbc:	460c      	mov	r4, r1
 8000bbe:	4691      	mov	r9, r2
 8000bc0:	7e27      	ldrb	r7, [r4, #24]
 8000bc2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000bc4:	2f78      	cmp	r7, #120	; 0x78
 8000bc6:	4680      	mov	r8, r0
 8000bc8:	469a      	mov	sl, r3
 8000bca:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bce:	d807      	bhi.n	8000be0 <_printf_i+0x28>
 8000bd0:	2f62      	cmp	r7, #98	; 0x62
 8000bd2:	d80a      	bhi.n	8000bea <_printf_i+0x32>
 8000bd4:	2f00      	cmp	r7, #0
 8000bd6:	f000 80d8 	beq.w	8000d8a <_printf_i+0x1d2>
 8000bda:	2f58      	cmp	r7, #88	; 0x58
 8000bdc:	f000 80a3 	beq.w	8000d26 <_printf_i+0x16e>
 8000be0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000be4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000be8:	e03a      	b.n	8000c60 <_printf_i+0xa8>
 8000bea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000bee:	2b15      	cmp	r3, #21
 8000bf0:	d8f6      	bhi.n	8000be0 <_printf_i+0x28>
 8000bf2:	a001      	add	r0, pc, #4	; (adr r0, 8000bf8 <_printf_i+0x40>)
 8000bf4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000bf8:	08000c51 	.word	0x08000c51
 8000bfc:	08000c65 	.word	0x08000c65
 8000c00:	08000be1 	.word	0x08000be1
 8000c04:	08000be1 	.word	0x08000be1
 8000c08:	08000be1 	.word	0x08000be1
 8000c0c:	08000be1 	.word	0x08000be1
 8000c10:	08000c65 	.word	0x08000c65
 8000c14:	08000be1 	.word	0x08000be1
 8000c18:	08000be1 	.word	0x08000be1
 8000c1c:	08000be1 	.word	0x08000be1
 8000c20:	08000be1 	.word	0x08000be1
 8000c24:	08000d71 	.word	0x08000d71
 8000c28:	08000c95 	.word	0x08000c95
 8000c2c:	08000d53 	.word	0x08000d53
 8000c30:	08000be1 	.word	0x08000be1
 8000c34:	08000be1 	.word	0x08000be1
 8000c38:	08000d93 	.word	0x08000d93
 8000c3c:	08000be1 	.word	0x08000be1
 8000c40:	08000c95 	.word	0x08000c95
 8000c44:	08000be1 	.word	0x08000be1
 8000c48:	08000be1 	.word	0x08000be1
 8000c4c:	08000d5b 	.word	0x08000d5b
 8000c50:	680b      	ldr	r3, [r1, #0]
 8000c52:	1d1a      	adds	r2, r3, #4
 8000c54:	681b      	ldr	r3, [r3, #0]
 8000c56:	600a      	str	r2, [r1, #0]
 8000c58:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000c5c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c60:	2301      	movs	r3, #1
 8000c62:	e0a3      	b.n	8000dac <_printf_i+0x1f4>
 8000c64:	6825      	ldr	r5, [r4, #0]
 8000c66:	6808      	ldr	r0, [r1, #0]
 8000c68:	062e      	lsls	r6, r5, #24
 8000c6a:	f100 0304 	add.w	r3, r0, #4
 8000c6e:	d50a      	bpl.n	8000c86 <_printf_i+0xce>
 8000c70:	6805      	ldr	r5, [r0, #0]
 8000c72:	600b      	str	r3, [r1, #0]
 8000c74:	2d00      	cmp	r5, #0
 8000c76:	da03      	bge.n	8000c80 <_printf_i+0xc8>
 8000c78:	232d      	movs	r3, #45	; 0x2d
 8000c7a:	426d      	negs	r5, r5
 8000c7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c80:	485e      	ldr	r0, [pc, #376]	; (8000dfc <_printf_i+0x244>)
 8000c82:	230a      	movs	r3, #10
 8000c84:	e019      	b.n	8000cba <_printf_i+0x102>
 8000c86:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000c8a:	6805      	ldr	r5, [r0, #0]
 8000c8c:	600b      	str	r3, [r1, #0]
 8000c8e:	bf18      	it	ne
 8000c90:	b22d      	sxthne	r5, r5
 8000c92:	e7ef      	b.n	8000c74 <_printf_i+0xbc>
 8000c94:	680b      	ldr	r3, [r1, #0]
 8000c96:	6825      	ldr	r5, [r4, #0]
 8000c98:	1d18      	adds	r0, r3, #4
 8000c9a:	6008      	str	r0, [r1, #0]
 8000c9c:	0628      	lsls	r0, r5, #24
 8000c9e:	d501      	bpl.n	8000ca4 <_printf_i+0xec>
 8000ca0:	681d      	ldr	r5, [r3, #0]
 8000ca2:	e002      	b.n	8000caa <_printf_i+0xf2>
 8000ca4:	0669      	lsls	r1, r5, #25
 8000ca6:	d5fb      	bpl.n	8000ca0 <_printf_i+0xe8>
 8000ca8:	881d      	ldrh	r5, [r3, #0]
 8000caa:	4854      	ldr	r0, [pc, #336]	; (8000dfc <_printf_i+0x244>)
 8000cac:	2f6f      	cmp	r7, #111	; 0x6f
 8000cae:	bf0c      	ite	eq
 8000cb0:	2308      	moveq	r3, #8
 8000cb2:	230a      	movne	r3, #10
 8000cb4:	2100      	movs	r1, #0
 8000cb6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000cba:	6866      	ldr	r6, [r4, #4]
 8000cbc:	60a6      	str	r6, [r4, #8]
 8000cbe:	2e00      	cmp	r6, #0
 8000cc0:	bfa2      	ittt	ge
 8000cc2:	6821      	ldrge	r1, [r4, #0]
 8000cc4:	f021 0104 	bicge.w	r1, r1, #4
 8000cc8:	6021      	strge	r1, [r4, #0]
 8000cca:	b90d      	cbnz	r5, 8000cd0 <_printf_i+0x118>
 8000ccc:	2e00      	cmp	r6, #0
 8000cce:	d04d      	beq.n	8000d6c <_printf_i+0x1b4>
 8000cd0:	4616      	mov	r6, r2
 8000cd2:	fbb5 f1f3 	udiv	r1, r5, r3
 8000cd6:	fb03 5711 	mls	r7, r3, r1, r5
 8000cda:	5dc7      	ldrb	r7, [r0, r7]
 8000cdc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000ce0:	462f      	mov	r7, r5
 8000ce2:	42bb      	cmp	r3, r7
 8000ce4:	460d      	mov	r5, r1
 8000ce6:	d9f4      	bls.n	8000cd2 <_printf_i+0x11a>
 8000ce8:	2b08      	cmp	r3, #8
 8000cea:	d10b      	bne.n	8000d04 <_printf_i+0x14c>
 8000cec:	6823      	ldr	r3, [r4, #0]
 8000cee:	07df      	lsls	r7, r3, #31
 8000cf0:	d508      	bpl.n	8000d04 <_printf_i+0x14c>
 8000cf2:	6923      	ldr	r3, [r4, #16]
 8000cf4:	6861      	ldr	r1, [r4, #4]
 8000cf6:	4299      	cmp	r1, r3
 8000cf8:	bfde      	ittt	le
 8000cfa:	2330      	movle	r3, #48	; 0x30
 8000cfc:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000d00:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000d04:	1b92      	subs	r2, r2, r6
 8000d06:	6122      	str	r2, [r4, #16]
 8000d08:	f8cd a000 	str.w	sl, [sp]
 8000d0c:	464b      	mov	r3, r9
 8000d0e:	aa03      	add	r2, sp, #12
 8000d10:	4621      	mov	r1, r4
 8000d12:	4640      	mov	r0, r8
 8000d14:	f7ff fee2 	bl	8000adc <_printf_common>
 8000d18:	3001      	adds	r0, #1
 8000d1a:	d14c      	bne.n	8000db6 <_printf_i+0x1fe>
 8000d1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d20:	b004      	add	sp, #16
 8000d22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d26:	4835      	ldr	r0, [pc, #212]	; (8000dfc <_printf_i+0x244>)
 8000d28:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000d2c:	6823      	ldr	r3, [r4, #0]
 8000d2e:	680e      	ldr	r6, [r1, #0]
 8000d30:	061f      	lsls	r7, r3, #24
 8000d32:	f856 5b04 	ldr.w	r5, [r6], #4
 8000d36:	600e      	str	r6, [r1, #0]
 8000d38:	d514      	bpl.n	8000d64 <_printf_i+0x1ac>
 8000d3a:	07d9      	lsls	r1, r3, #31
 8000d3c:	bf44      	itt	mi
 8000d3e:	f043 0320 	orrmi.w	r3, r3, #32
 8000d42:	6023      	strmi	r3, [r4, #0]
 8000d44:	b91d      	cbnz	r5, 8000d4e <_printf_i+0x196>
 8000d46:	6823      	ldr	r3, [r4, #0]
 8000d48:	f023 0320 	bic.w	r3, r3, #32
 8000d4c:	6023      	str	r3, [r4, #0]
 8000d4e:	2310      	movs	r3, #16
 8000d50:	e7b0      	b.n	8000cb4 <_printf_i+0xfc>
 8000d52:	6823      	ldr	r3, [r4, #0]
 8000d54:	f043 0320 	orr.w	r3, r3, #32
 8000d58:	6023      	str	r3, [r4, #0]
 8000d5a:	2378      	movs	r3, #120	; 0x78
 8000d5c:	4828      	ldr	r0, [pc, #160]	; (8000e00 <_printf_i+0x248>)
 8000d5e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d62:	e7e3      	b.n	8000d2c <_printf_i+0x174>
 8000d64:	065e      	lsls	r6, r3, #25
 8000d66:	bf48      	it	mi
 8000d68:	b2ad      	uxthmi	r5, r5
 8000d6a:	e7e6      	b.n	8000d3a <_printf_i+0x182>
 8000d6c:	4616      	mov	r6, r2
 8000d6e:	e7bb      	b.n	8000ce8 <_printf_i+0x130>
 8000d70:	680b      	ldr	r3, [r1, #0]
 8000d72:	6826      	ldr	r6, [r4, #0]
 8000d74:	6960      	ldr	r0, [r4, #20]
 8000d76:	1d1d      	adds	r5, r3, #4
 8000d78:	600d      	str	r5, [r1, #0]
 8000d7a:	0635      	lsls	r5, r6, #24
 8000d7c:	681b      	ldr	r3, [r3, #0]
 8000d7e:	d501      	bpl.n	8000d84 <_printf_i+0x1cc>
 8000d80:	6018      	str	r0, [r3, #0]
 8000d82:	e002      	b.n	8000d8a <_printf_i+0x1d2>
 8000d84:	0671      	lsls	r1, r6, #25
 8000d86:	d5fb      	bpl.n	8000d80 <_printf_i+0x1c8>
 8000d88:	8018      	strh	r0, [r3, #0]
 8000d8a:	2300      	movs	r3, #0
 8000d8c:	6123      	str	r3, [r4, #16]
 8000d8e:	4616      	mov	r6, r2
 8000d90:	e7ba      	b.n	8000d08 <_printf_i+0x150>
 8000d92:	680b      	ldr	r3, [r1, #0]
 8000d94:	1d1a      	adds	r2, r3, #4
 8000d96:	600a      	str	r2, [r1, #0]
 8000d98:	681e      	ldr	r6, [r3, #0]
 8000d9a:	6862      	ldr	r2, [r4, #4]
 8000d9c:	2100      	movs	r1, #0
 8000d9e:	4630      	mov	r0, r6
 8000da0:	f7ff fa1e 	bl	80001e0 <memchr>
 8000da4:	b108      	cbz	r0, 8000daa <_printf_i+0x1f2>
 8000da6:	1b80      	subs	r0, r0, r6
 8000da8:	6060      	str	r0, [r4, #4]
 8000daa:	6863      	ldr	r3, [r4, #4]
 8000dac:	6123      	str	r3, [r4, #16]
 8000dae:	2300      	movs	r3, #0
 8000db0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000db4:	e7a8      	b.n	8000d08 <_printf_i+0x150>
 8000db6:	6923      	ldr	r3, [r4, #16]
 8000db8:	4632      	mov	r2, r6
 8000dba:	4649      	mov	r1, r9
 8000dbc:	4640      	mov	r0, r8
 8000dbe:	47d0      	blx	sl
 8000dc0:	3001      	adds	r0, #1
 8000dc2:	d0ab      	beq.n	8000d1c <_printf_i+0x164>
 8000dc4:	6823      	ldr	r3, [r4, #0]
 8000dc6:	079b      	lsls	r3, r3, #30
 8000dc8:	d413      	bmi.n	8000df2 <_printf_i+0x23a>
 8000dca:	68e0      	ldr	r0, [r4, #12]
 8000dcc:	9b03      	ldr	r3, [sp, #12]
 8000dce:	4298      	cmp	r0, r3
 8000dd0:	bfb8      	it	lt
 8000dd2:	4618      	movlt	r0, r3
 8000dd4:	e7a4      	b.n	8000d20 <_printf_i+0x168>
 8000dd6:	2301      	movs	r3, #1
 8000dd8:	4632      	mov	r2, r6
 8000dda:	4649      	mov	r1, r9
 8000ddc:	4640      	mov	r0, r8
 8000dde:	47d0      	blx	sl
 8000de0:	3001      	adds	r0, #1
 8000de2:	d09b      	beq.n	8000d1c <_printf_i+0x164>
 8000de4:	3501      	adds	r5, #1
 8000de6:	68e3      	ldr	r3, [r4, #12]
 8000de8:	9903      	ldr	r1, [sp, #12]
 8000dea:	1a5b      	subs	r3, r3, r1
 8000dec:	42ab      	cmp	r3, r5
 8000dee:	dcf2      	bgt.n	8000dd6 <_printf_i+0x21e>
 8000df0:	e7eb      	b.n	8000dca <_printf_i+0x212>
 8000df2:	2500      	movs	r5, #0
 8000df4:	f104 0619 	add.w	r6, r4, #25
 8000df8:	e7f5      	b.n	8000de6 <_printf_i+0x22e>
 8000dfa:	bf00      	nop
 8000dfc:	08001491 	.word	0x08001491
 8000e00:	080014a2 	.word	0x080014a2

08000e04 <_sbrk_r>:
 8000e04:	b538      	push	{r3, r4, r5, lr}
 8000e06:	4d06      	ldr	r5, [pc, #24]	; (8000e20 <_sbrk_r+0x1c>)
 8000e08:	2300      	movs	r3, #0
 8000e0a:	4604      	mov	r4, r0
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	602b      	str	r3, [r5, #0]
 8000e10:	f7ff fb10 	bl	8000434 <_sbrk>
 8000e14:	1c43      	adds	r3, r0, #1
 8000e16:	d102      	bne.n	8000e1e <_sbrk_r+0x1a>
 8000e18:	682b      	ldr	r3, [r5, #0]
 8000e1a:	b103      	cbz	r3, 8000e1e <_sbrk_r+0x1a>
 8000e1c:	6023      	str	r3, [r4, #0]
 8000e1e:	bd38      	pop	{r3, r4, r5, pc}
 8000e20:	20000098 	.word	0x20000098

08000e24 <__sread>:
 8000e24:	b510      	push	{r4, lr}
 8000e26:	460c      	mov	r4, r1
 8000e28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e2c:	f000 fab2 	bl	8001394 <_read_r>
 8000e30:	2800      	cmp	r0, #0
 8000e32:	bfab      	itete	ge
 8000e34:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e36:	89a3      	ldrhlt	r3, [r4, #12]
 8000e38:	181b      	addge	r3, r3, r0
 8000e3a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e3e:	bfac      	ite	ge
 8000e40:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e42:	81a3      	strhlt	r3, [r4, #12]
 8000e44:	bd10      	pop	{r4, pc}

08000e46 <__swrite>:
 8000e46:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e4a:	461f      	mov	r7, r3
 8000e4c:	898b      	ldrh	r3, [r1, #12]
 8000e4e:	05db      	lsls	r3, r3, #23
 8000e50:	4605      	mov	r5, r0
 8000e52:	460c      	mov	r4, r1
 8000e54:	4616      	mov	r6, r2
 8000e56:	d505      	bpl.n	8000e64 <__swrite+0x1e>
 8000e58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e5c:	2302      	movs	r3, #2
 8000e5e:	2200      	movs	r2, #0
 8000e60:	f000 f9c8 	bl	80011f4 <_lseek_r>
 8000e64:	89a3      	ldrh	r3, [r4, #12]
 8000e66:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e6a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e6e:	81a3      	strh	r3, [r4, #12]
 8000e70:	4632      	mov	r2, r6
 8000e72:	463b      	mov	r3, r7
 8000e74:	4628      	mov	r0, r5
 8000e76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e7a:	f000 b869 	b.w	8000f50 <_write_r>

08000e7e <__sseek>:
 8000e7e:	b510      	push	{r4, lr}
 8000e80:	460c      	mov	r4, r1
 8000e82:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e86:	f000 f9b5 	bl	80011f4 <_lseek_r>
 8000e8a:	1c43      	adds	r3, r0, #1
 8000e8c:	89a3      	ldrh	r3, [r4, #12]
 8000e8e:	bf15      	itete	ne
 8000e90:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e92:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e96:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e9a:	81a3      	strheq	r3, [r4, #12]
 8000e9c:	bf18      	it	ne
 8000e9e:	81a3      	strhne	r3, [r4, #12]
 8000ea0:	bd10      	pop	{r4, pc}

08000ea2 <__sclose>:
 8000ea2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ea6:	f000 b8d3 	b.w	8001050 <_close_r>
	...

08000eac <__swbuf_r>:
 8000eac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000eae:	460e      	mov	r6, r1
 8000eb0:	4614      	mov	r4, r2
 8000eb2:	4605      	mov	r5, r0
 8000eb4:	b118      	cbz	r0, 8000ebe <__swbuf_r+0x12>
 8000eb6:	6983      	ldr	r3, [r0, #24]
 8000eb8:	b90b      	cbnz	r3, 8000ebe <__swbuf_r+0x12>
 8000eba:	f7ff fbbd 	bl	8000638 <__sinit>
 8000ebe:	4b21      	ldr	r3, [pc, #132]	; (8000f44 <__swbuf_r+0x98>)
 8000ec0:	429c      	cmp	r4, r3
 8000ec2:	d12b      	bne.n	8000f1c <__swbuf_r+0x70>
 8000ec4:	686c      	ldr	r4, [r5, #4]
 8000ec6:	69a3      	ldr	r3, [r4, #24]
 8000ec8:	60a3      	str	r3, [r4, #8]
 8000eca:	89a3      	ldrh	r3, [r4, #12]
 8000ecc:	071a      	lsls	r2, r3, #28
 8000ece:	d52f      	bpl.n	8000f30 <__swbuf_r+0x84>
 8000ed0:	6923      	ldr	r3, [r4, #16]
 8000ed2:	b36b      	cbz	r3, 8000f30 <__swbuf_r+0x84>
 8000ed4:	6923      	ldr	r3, [r4, #16]
 8000ed6:	6820      	ldr	r0, [r4, #0]
 8000ed8:	1ac0      	subs	r0, r0, r3
 8000eda:	6963      	ldr	r3, [r4, #20]
 8000edc:	b2f6      	uxtb	r6, r6
 8000ede:	4283      	cmp	r3, r0
 8000ee0:	4637      	mov	r7, r6
 8000ee2:	dc04      	bgt.n	8000eee <__swbuf_r+0x42>
 8000ee4:	4621      	mov	r1, r4
 8000ee6:	4628      	mov	r0, r5
 8000ee8:	f000 f948 	bl	800117c <_fflush_r>
 8000eec:	bb30      	cbnz	r0, 8000f3c <__swbuf_r+0x90>
 8000eee:	68a3      	ldr	r3, [r4, #8]
 8000ef0:	3b01      	subs	r3, #1
 8000ef2:	60a3      	str	r3, [r4, #8]
 8000ef4:	6823      	ldr	r3, [r4, #0]
 8000ef6:	1c5a      	adds	r2, r3, #1
 8000ef8:	6022      	str	r2, [r4, #0]
 8000efa:	701e      	strb	r6, [r3, #0]
 8000efc:	6963      	ldr	r3, [r4, #20]
 8000efe:	3001      	adds	r0, #1
 8000f00:	4283      	cmp	r3, r0
 8000f02:	d004      	beq.n	8000f0e <__swbuf_r+0x62>
 8000f04:	89a3      	ldrh	r3, [r4, #12]
 8000f06:	07db      	lsls	r3, r3, #31
 8000f08:	d506      	bpl.n	8000f18 <__swbuf_r+0x6c>
 8000f0a:	2e0a      	cmp	r6, #10
 8000f0c:	d104      	bne.n	8000f18 <__swbuf_r+0x6c>
 8000f0e:	4621      	mov	r1, r4
 8000f10:	4628      	mov	r0, r5
 8000f12:	f000 f933 	bl	800117c <_fflush_r>
 8000f16:	b988      	cbnz	r0, 8000f3c <__swbuf_r+0x90>
 8000f18:	4638      	mov	r0, r7
 8000f1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f1c:	4b0a      	ldr	r3, [pc, #40]	; (8000f48 <__swbuf_r+0x9c>)
 8000f1e:	429c      	cmp	r4, r3
 8000f20:	d101      	bne.n	8000f26 <__swbuf_r+0x7a>
 8000f22:	68ac      	ldr	r4, [r5, #8]
 8000f24:	e7cf      	b.n	8000ec6 <__swbuf_r+0x1a>
 8000f26:	4b09      	ldr	r3, [pc, #36]	; (8000f4c <__swbuf_r+0xa0>)
 8000f28:	429c      	cmp	r4, r3
 8000f2a:	bf08      	it	eq
 8000f2c:	68ec      	ldreq	r4, [r5, #12]
 8000f2e:	e7ca      	b.n	8000ec6 <__swbuf_r+0x1a>
 8000f30:	4621      	mov	r1, r4
 8000f32:	4628      	mov	r0, r5
 8000f34:	f000 f81e 	bl	8000f74 <__swsetup_r>
 8000f38:	2800      	cmp	r0, #0
 8000f3a:	d0cb      	beq.n	8000ed4 <__swbuf_r+0x28>
 8000f3c:	f04f 37ff 	mov.w	r7, #4294967295
 8000f40:	e7ea      	b.n	8000f18 <__swbuf_r+0x6c>
 8000f42:	bf00      	nop
 8000f44:	08001440 	.word	0x08001440
 8000f48:	08001460 	.word	0x08001460
 8000f4c:	08001420 	.word	0x08001420

08000f50 <_write_r>:
 8000f50:	b538      	push	{r3, r4, r5, lr}
 8000f52:	4d07      	ldr	r5, [pc, #28]	; (8000f70 <_write_r+0x20>)
 8000f54:	4604      	mov	r4, r0
 8000f56:	4608      	mov	r0, r1
 8000f58:	4611      	mov	r1, r2
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	602a      	str	r2, [r5, #0]
 8000f5e:	461a      	mov	r2, r3
 8000f60:	f7ff fa1b 	bl	800039a <_write>
 8000f64:	1c43      	adds	r3, r0, #1
 8000f66:	d102      	bne.n	8000f6e <_write_r+0x1e>
 8000f68:	682b      	ldr	r3, [r5, #0]
 8000f6a:	b103      	cbz	r3, 8000f6e <_write_r+0x1e>
 8000f6c:	6023      	str	r3, [r4, #0]
 8000f6e:	bd38      	pop	{r3, r4, r5, pc}
 8000f70:	20000098 	.word	0x20000098

08000f74 <__swsetup_r>:
 8000f74:	4b32      	ldr	r3, [pc, #200]	; (8001040 <__swsetup_r+0xcc>)
 8000f76:	b570      	push	{r4, r5, r6, lr}
 8000f78:	681d      	ldr	r5, [r3, #0]
 8000f7a:	4606      	mov	r6, r0
 8000f7c:	460c      	mov	r4, r1
 8000f7e:	b125      	cbz	r5, 8000f8a <__swsetup_r+0x16>
 8000f80:	69ab      	ldr	r3, [r5, #24]
 8000f82:	b913      	cbnz	r3, 8000f8a <__swsetup_r+0x16>
 8000f84:	4628      	mov	r0, r5
 8000f86:	f7ff fb57 	bl	8000638 <__sinit>
 8000f8a:	4b2e      	ldr	r3, [pc, #184]	; (8001044 <__swsetup_r+0xd0>)
 8000f8c:	429c      	cmp	r4, r3
 8000f8e:	d10f      	bne.n	8000fb0 <__swsetup_r+0x3c>
 8000f90:	686c      	ldr	r4, [r5, #4]
 8000f92:	89a3      	ldrh	r3, [r4, #12]
 8000f94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f98:	0719      	lsls	r1, r3, #28
 8000f9a:	d42c      	bmi.n	8000ff6 <__swsetup_r+0x82>
 8000f9c:	06dd      	lsls	r5, r3, #27
 8000f9e:	d411      	bmi.n	8000fc4 <__swsetup_r+0x50>
 8000fa0:	2309      	movs	r3, #9
 8000fa2:	6033      	str	r3, [r6, #0]
 8000fa4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000fa8:	81a3      	strh	r3, [r4, #12]
 8000faa:	f04f 30ff 	mov.w	r0, #4294967295
 8000fae:	e03e      	b.n	800102e <__swsetup_r+0xba>
 8000fb0:	4b25      	ldr	r3, [pc, #148]	; (8001048 <__swsetup_r+0xd4>)
 8000fb2:	429c      	cmp	r4, r3
 8000fb4:	d101      	bne.n	8000fba <__swsetup_r+0x46>
 8000fb6:	68ac      	ldr	r4, [r5, #8]
 8000fb8:	e7eb      	b.n	8000f92 <__swsetup_r+0x1e>
 8000fba:	4b24      	ldr	r3, [pc, #144]	; (800104c <__swsetup_r+0xd8>)
 8000fbc:	429c      	cmp	r4, r3
 8000fbe:	bf08      	it	eq
 8000fc0:	68ec      	ldreq	r4, [r5, #12]
 8000fc2:	e7e6      	b.n	8000f92 <__swsetup_r+0x1e>
 8000fc4:	0758      	lsls	r0, r3, #29
 8000fc6:	d512      	bpl.n	8000fee <__swsetup_r+0x7a>
 8000fc8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fca:	b141      	cbz	r1, 8000fde <__swsetup_r+0x6a>
 8000fcc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fd0:	4299      	cmp	r1, r3
 8000fd2:	d002      	beq.n	8000fda <__swsetup_r+0x66>
 8000fd4:	4630      	mov	r0, r6
 8000fd6:	f000 f98f 	bl	80012f8 <_free_r>
 8000fda:	2300      	movs	r3, #0
 8000fdc:	6363      	str	r3, [r4, #52]	; 0x34
 8000fde:	89a3      	ldrh	r3, [r4, #12]
 8000fe0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000fe4:	81a3      	strh	r3, [r4, #12]
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	6063      	str	r3, [r4, #4]
 8000fea:	6923      	ldr	r3, [r4, #16]
 8000fec:	6023      	str	r3, [r4, #0]
 8000fee:	89a3      	ldrh	r3, [r4, #12]
 8000ff0:	f043 0308 	orr.w	r3, r3, #8
 8000ff4:	81a3      	strh	r3, [r4, #12]
 8000ff6:	6923      	ldr	r3, [r4, #16]
 8000ff8:	b94b      	cbnz	r3, 800100e <__swsetup_r+0x9a>
 8000ffa:	89a3      	ldrh	r3, [r4, #12]
 8000ffc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001000:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001004:	d003      	beq.n	800100e <__swsetup_r+0x9a>
 8001006:	4621      	mov	r1, r4
 8001008:	4630      	mov	r0, r6
 800100a:	f000 f929 	bl	8001260 <__smakebuf_r>
 800100e:	89a0      	ldrh	r0, [r4, #12]
 8001010:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001014:	f010 0301 	ands.w	r3, r0, #1
 8001018:	d00a      	beq.n	8001030 <__swsetup_r+0xbc>
 800101a:	2300      	movs	r3, #0
 800101c:	60a3      	str	r3, [r4, #8]
 800101e:	6963      	ldr	r3, [r4, #20]
 8001020:	425b      	negs	r3, r3
 8001022:	61a3      	str	r3, [r4, #24]
 8001024:	6923      	ldr	r3, [r4, #16]
 8001026:	b943      	cbnz	r3, 800103a <__swsetup_r+0xc6>
 8001028:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800102c:	d1ba      	bne.n	8000fa4 <__swsetup_r+0x30>
 800102e:	bd70      	pop	{r4, r5, r6, pc}
 8001030:	0781      	lsls	r1, r0, #30
 8001032:	bf58      	it	pl
 8001034:	6963      	ldrpl	r3, [r4, #20]
 8001036:	60a3      	str	r3, [r4, #8]
 8001038:	e7f4      	b.n	8001024 <__swsetup_r+0xb0>
 800103a:	2000      	movs	r0, #0
 800103c:	e7f7      	b.n	800102e <__swsetup_r+0xba>
 800103e:	bf00      	nop
 8001040:	20000000 	.word	0x20000000
 8001044:	08001440 	.word	0x08001440
 8001048:	08001460 	.word	0x08001460
 800104c:	08001420 	.word	0x08001420

08001050 <_close_r>:
 8001050:	b538      	push	{r3, r4, r5, lr}
 8001052:	4d06      	ldr	r5, [pc, #24]	; (800106c <_close_r+0x1c>)
 8001054:	2300      	movs	r3, #0
 8001056:	4604      	mov	r4, r0
 8001058:	4608      	mov	r0, r1
 800105a:	602b      	str	r3, [r5, #0]
 800105c:	f7ff f9b9 	bl	80003d2 <_close>
 8001060:	1c43      	adds	r3, r0, #1
 8001062:	d102      	bne.n	800106a <_close_r+0x1a>
 8001064:	682b      	ldr	r3, [r5, #0]
 8001066:	b103      	cbz	r3, 800106a <_close_r+0x1a>
 8001068:	6023      	str	r3, [r4, #0]
 800106a:	bd38      	pop	{r3, r4, r5, pc}
 800106c:	20000098 	.word	0x20000098

08001070 <__sflush_r>:
 8001070:	898a      	ldrh	r2, [r1, #12]
 8001072:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001076:	4605      	mov	r5, r0
 8001078:	0710      	lsls	r0, r2, #28
 800107a:	460c      	mov	r4, r1
 800107c:	d458      	bmi.n	8001130 <__sflush_r+0xc0>
 800107e:	684b      	ldr	r3, [r1, #4]
 8001080:	2b00      	cmp	r3, #0
 8001082:	dc05      	bgt.n	8001090 <__sflush_r+0x20>
 8001084:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001086:	2b00      	cmp	r3, #0
 8001088:	dc02      	bgt.n	8001090 <__sflush_r+0x20>
 800108a:	2000      	movs	r0, #0
 800108c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001090:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001092:	2e00      	cmp	r6, #0
 8001094:	d0f9      	beq.n	800108a <__sflush_r+0x1a>
 8001096:	2300      	movs	r3, #0
 8001098:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800109c:	682f      	ldr	r7, [r5, #0]
 800109e:	602b      	str	r3, [r5, #0]
 80010a0:	d032      	beq.n	8001108 <__sflush_r+0x98>
 80010a2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010a4:	89a3      	ldrh	r3, [r4, #12]
 80010a6:	075a      	lsls	r2, r3, #29
 80010a8:	d505      	bpl.n	80010b6 <__sflush_r+0x46>
 80010aa:	6863      	ldr	r3, [r4, #4]
 80010ac:	1ac0      	subs	r0, r0, r3
 80010ae:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80010b0:	b10b      	cbz	r3, 80010b6 <__sflush_r+0x46>
 80010b2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010b4:	1ac0      	subs	r0, r0, r3
 80010b6:	2300      	movs	r3, #0
 80010b8:	4602      	mov	r2, r0
 80010ba:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010bc:	6a21      	ldr	r1, [r4, #32]
 80010be:	4628      	mov	r0, r5
 80010c0:	47b0      	blx	r6
 80010c2:	1c43      	adds	r3, r0, #1
 80010c4:	89a3      	ldrh	r3, [r4, #12]
 80010c6:	d106      	bne.n	80010d6 <__sflush_r+0x66>
 80010c8:	6829      	ldr	r1, [r5, #0]
 80010ca:	291d      	cmp	r1, #29
 80010cc:	d82c      	bhi.n	8001128 <__sflush_r+0xb8>
 80010ce:	4a2a      	ldr	r2, [pc, #168]	; (8001178 <__sflush_r+0x108>)
 80010d0:	40ca      	lsrs	r2, r1
 80010d2:	07d6      	lsls	r6, r2, #31
 80010d4:	d528      	bpl.n	8001128 <__sflush_r+0xb8>
 80010d6:	2200      	movs	r2, #0
 80010d8:	6062      	str	r2, [r4, #4]
 80010da:	04d9      	lsls	r1, r3, #19
 80010dc:	6922      	ldr	r2, [r4, #16]
 80010de:	6022      	str	r2, [r4, #0]
 80010e0:	d504      	bpl.n	80010ec <__sflush_r+0x7c>
 80010e2:	1c42      	adds	r2, r0, #1
 80010e4:	d101      	bne.n	80010ea <__sflush_r+0x7a>
 80010e6:	682b      	ldr	r3, [r5, #0]
 80010e8:	b903      	cbnz	r3, 80010ec <__sflush_r+0x7c>
 80010ea:	6560      	str	r0, [r4, #84]	; 0x54
 80010ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010ee:	602f      	str	r7, [r5, #0]
 80010f0:	2900      	cmp	r1, #0
 80010f2:	d0ca      	beq.n	800108a <__sflush_r+0x1a>
 80010f4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010f8:	4299      	cmp	r1, r3
 80010fa:	d002      	beq.n	8001102 <__sflush_r+0x92>
 80010fc:	4628      	mov	r0, r5
 80010fe:	f000 f8fb 	bl	80012f8 <_free_r>
 8001102:	2000      	movs	r0, #0
 8001104:	6360      	str	r0, [r4, #52]	; 0x34
 8001106:	e7c1      	b.n	800108c <__sflush_r+0x1c>
 8001108:	6a21      	ldr	r1, [r4, #32]
 800110a:	2301      	movs	r3, #1
 800110c:	4628      	mov	r0, r5
 800110e:	47b0      	blx	r6
 8001110:	1c41      	adds	r1, r0, #1
 8001112:	d1c7      	bne.n	80010a4 <__sflush_r+0x34>
 8001114:	682b      	ldr	r3, [r5, #0]
 8001116:	2b00      	cmp	r3, #0
 8001118:	d0c4      	beq.n	80010a4 <__sflush_r+0x34>
 800111a:	2b1d      	cmp	r3, #29
 800111c:	d001      	beq.n	8001122 <__sflush_r+0xb2>
 800111e:	2b16      	cmp	r3, #22
 8001120:	d101      	bne.n	8001126 <__sflush_r+0xb6>
 8001122:	602f      	str	r7, [r5, #0]
 8001124:	e7b1      	b.n	800108a <__sflush_r+0x1a>
 8001126:	89a3      	ldrh	r3, [r4, #12]
 8001128:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800112c:	81a3      	strh	r3, [r4, #12]
 800112e:	e7ad      	b.n	800108c <__sflush_r+0x1c>
 8001130:	690f      	ldr	r7, [r1, #16]
 8001132:	2f00      	cmp	r7, #0
 8001134:	d0a9      	beq.n	800108a <__sflush_r+0x1a>
 8001136:	0793      	lsls	r3, r2, #30
 8001138:	680e      	ldr	r6, [r1, #0]
 800113a:	bf08      	it	eq
 800113c:	694b      	ldreq	r3, [r1, #20]
 800113e:	600f      	str	r7, [r1, #0]
 8001140:	bf18      	it	ne
 8001142:	2300      	movne	r3, #0
 8001144:	eba6 0807 	sub.w	r8, r6, r7
 8001148:	608b      	str	r3, [r1, #8]
 800114a:	f1b8 0f00 	cmp.w	r8, #0
 800114e:	dd9c      	ble.n	800108a <__sflush_r+0x1a>
 8001150:	6a21      	ldr	r1, [r4, #32]
 8001152:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001154:	4643      	mov	r3, r8
 8001156:	463a      	mov	r2, r7
 8001158:	4628      	mov	r0, r5
 800115a:	47b0      	blx	r6
 800115c:	2800      	cmp	r0, #0
 800115e:	dc06      	bgt.n	800116e <__sflush_r+0xfe>
 8001160:	89a3      	ldrh	r3, [r4, #12]
 8001162:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001166:	81a3      	strh	r3, [r4, #12]
 8001168:	f04f 30ff 	mov.w	r0, #4294967295
 800116c:	e78e      	b.n	800108c <__sflush_r+0x1c>
 800116e:	4407      	add	r7, r0
 8001170:	eba8 0800 	sub.w	r8, r8, r0
 8001174:	e7e9      	b.n	800114a <__sflush_r+0xda>
 8001176:	bf00      	nop
 8001178:	20400001 	.word	0x20400001

0800117c <_fflush_r>:
 800117c:	b538      	push	{r3, r4, r5, lr}
 800117e:	690b      	ldr	r3, [r1, #16]
 8001180:	4605      	mov	r5, r0
 8001182:	460c      	mov	r4, r1
 8001184:	b913      	cbnz	r3, 800118c <_fflush_r+0x10>
 8001186:	2500      	movs	r5, #0
 8001188:	4628      	mov	r0, r5
 800118a:	bd38      	pop	{r3, r4, r5, pc}
 800118c:	b118      	cbz	r0, 8001196 <_fflush_r+0x1a>
 800118e:	6983      	ldr	r3, [r0, #24]
 8001190:	b90b      	cbnz	r3, 8001196 <_fflush_r+0x1a>
 8001192:	f7ff fa51 	bl	8000638 <__sinit>
 8001196:	4b14      	ldr	r3, [pc, #80]	; (80011e8 <_fflush_r+0x6c>)
 8001198:	429c      	cmp	r4, r3
 800119a:	d11b      	bne.n	80011d4 <_fflush_r+0x58>
 800119c:	686c      	ldr	r4, [r5, #4]
 800119e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d0ef      	beq.n	8001186 <_fflush_r+0xa>
 80011a6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80011a8:	07d0      	lsls	r0, r2, #31
 80011aa:	d404      	bmi.n	80011b6 <_fflush_r+0x3a>
 80011ac:	0599      	lsls	r1, r3, #22
 80011ae:	d402      	bmi.n	80011b6 <_fflush_r+0x3a>
 80011b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011b2:	f7ff fadf 	bl	8000774 <__retarget_lock_acquire_recursive>
 80011b6:	4628      	mov	r0, r5
 80011b8:	4621      	mov	r1, r4
 80011ba:	f7ff ff59 	bl	8001070 <__sflush_r>
 80011be:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80011c0:	07da      	lsls	r2, r3, #31
 80011c2:	4605      	mov	r5, r0
 80011c4:	d4e0      	bmi.n	8001188 <_fflush_r+0xc>
 80011c6:	89a3      	ldrh	r3, [r4, #12]
 80011c8:	059b      	lsls	r3, r3, #22
 80011ca:	d4dd      	bmi.n	8001188 <_fflush_r+0xc>
 80011cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011ce:	f7ff fad2 	bl	8000776 <__retarget_lock_release_recursive>
 80011d2:	e7d9      	b.n	8001188 <_fflush_r+0xc>
 80011d4:	4b05      	ldr	r3, [pc, #20]	; (80011ec <_fflush_r+0x70>)
 80011d6:	429c      	cmp	r4, r3
 80011d8:	d101      	bne.n	80011de <_fflush_r+0x62>
 80011da:	68ac      	ldr	r4, [r5, #8]
 80011dc:	e7df      	b.n	800119e <_fflush_r+0x22>
 80011de:	4b04      	ldr	r3, [pc, #16]	; (80011f0 <_fflush_r+0x74>)
 80011e0:	429c      	cmp	r4, r3
 80011e2:	bf08      	it	eq
 80011e4:	68ec      	ldreq	r4, [r5, #12]
 80011e6:	e7da      	b.n	800119e <_fflush_r+0x22>
 80011e8:	08001440 	.word	0x08001440
 80011ec:	08001460 	.word	0x08001460
 80011f0:	08001420 	.word	0x08001420

080011f4 <_lseek_r>:
 80011f4:	b538      	push	{r3, r4, r5, lr}
 80011f6:	4d07      	ldr	r5, [pc, #28]	; (8001214 <_lseek_r+0x20>)
 80011f8:	4604      	mov	r4, r0
 80011fa:	4608      	mov	r0, r1
 80011fc:	4611      	mov	r1, r2
 80011fe:	2200      	movs	r2, #0
 8001200:	602a      	str	r2, [r5, #0]
 8001202:	461a      	mov	r2, r3
 8001204:	f7ff f909 	bl	800041a <_lseek>
 8001208:	1c43      	adds	r3, r0, #1
 800120a:	d102      	bne.n	8001212 <_lseek_r+0x1e>
 800120c:	682b      	ldr	r3, [r5, #0]
 800120e:	b103      	cbz	r3, 8001212 <_lseek_r+0x1e>
 8001210:	6023      	str	r3, [r4, #0]
 8001212:	bd38      	pop	{r3, r4, r5, pc}
 8001214:	20000098 	.word	0x20000098

08001218 <__swhatbuf_r>:
 8001218:	b570      	push	{r4, r5, r6, lr}
 800121a:	460e      	mov	r6, r1
 800121c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001220:	2900      	cmp	r1, #0
 8001222:	b096      	sub	sp, #88	; 0x58
 8001224:	4614      	mov	r4, r2
 8001226:	461d      	mov	r5, r3
 8001228:	da07      	bge.n	800123a <__swhatbuf_r+0x22>
 800122a:	2300      	movs	r3, #0
 800122c:	602b      	str	r3, [r5, #0]
 800122e:	89b3      	ldrh	r3, [r6, #12]
 8001230:	061a      	lsls	r2, r3, #24
 8001232:	d410      	bmi.n	8001256 <__swhatbuf_r+0x3e>
 8001234:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001238:	e00e      	b.n	8001258 <__swhatbuf_r+0x40>
 800123a:	466a      	mov	r2, sp
 800123c:	f000 f8bc 	bl	80013b8 <_fstat_r>
 8001240:	2800      	cmp	r0, #0
 8001242:	dbf2      	blt.n	800122a <__swhatbuf_r+0x12>
 8001244:	9a01      	ldr	r2, [sp, #4]
 8001246:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800124a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800124e:	425a      	negs	r2, r3
 8001250:	415a      	adcs	r2, r3
 8001252:	602a      	str	r2, [r5, #0]
 8001254:	e7ee      	b.n	8001234 <__swhatbuf_r+0x1c>
 8001256:	2340      	movs	r3, #64	; 0x40
 8001258:	2000      	movs	r0, #0
 800125a:	6023      	str	r3, [r4, #0]
 800125c:	b016      	add	sp, #88	; 0x58
 800125e:	bd70      	pop	{r4, r5, r6, pc}

08001260 <__smakebuf_r>:
 8001260:	898b      	ldrh	r3, [r1, #12]
 8001262:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001264:	079d      	lsls	r5, r3, #30
 8001266:	4606      	mov	r6, r0
 8001268:	460c      	mov	r4, r1
 800126a:	d507      	bpl.n	800127c <__smakebuf_r+0x1c>
 800126c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001270:	6023      	str	r3, [r4, #0]
 8001272:	6123      	str	r3, [r4, #16]
 8001274:	2301      	movs	r3, #1
 8001276:	6163      	str	r3, [r4, #20]
 8001278:	b002      	add	sp, #8
 800127a:	bd70      	pop	{r4, r5, r6, pc}
 800127c:	ab01      	add	r3, sp, #4
 800127e:	466a      	mov	r2, sp
 8001280:	f7ff ffca 	bl	8001218 <__swhatbuf_r>
 8001284:	9900      	ldr	r1, [sp, #0]
 8001286:	4605      	mov	r5, r0
 8001288:	4630      	mov	r0, r6
 800128a:	f7ff fa75 	bl	8000778 <_malloc_r>
 800128e:	b948      	cbnz	r0, 80012a4 <__smakebuf_r+0x44>
 8001290:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001294:	059a      	lsls	r2, r3, #22
 8001296:	d4ef      	bmi.n	8001278 <__smakebuf_r+0x18>
 8001298:	f023 0303 	bic.w	r3, r3, #3
 800129c:	f043 0302 	orr.w	r3, r3, #2
 80012a0:	81a3      	strh	r3, [r4, #12]
 80012a2:	e7e3      	b.n	800126c <__smakebuf_r+0xc>
 80012a4:	4b0d      	ldr	r3, [pc, #52]	; (80012dc <__smakebuf_r+0x7c>)
 80012a6:	62b3      	str	r3, [r6, #40]	; 0x28
 80012a8:	89a3      	ldrh	r3, [r4, #12]
 80012aa:	6020      	str	r0, [r4, #0]
 80012ac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012b0:	81a3      	strh	r3, [r4, #12]
 80012b2:	9b00      	ldr	r3, [sp, #0]
 80012b4:	6163      	str	r3, [r4, #20]
 80012b6:	9b01      	ldr	r3, [sp, #4]
 80012b8:	6120      	str	r0, [r4, #16]
 80012ba:	b15b      	cbz	r3, 80012d4 <__smakebuf_r+0x74>
 80012bc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012c0:	4630      	mov	r0, r6
 80012c2:	f000 f88b 	bl	80013dc <_isatty_r>
 80012c6:	b128      	cbz	r0, 80012d4 <__smakebuf_r+0x74>
 80012c8:	89a3      	ldrh	r3, [r4, #12]
 80012ca:	f023 0303 	bic.w	r3, r3, #3
 80012ce:	f043 0301 	orr.w	r3, r3, #1
 80012d2:	81a3      	strh	r3, [r4, #12]
 80012d4:	89a0      	ldrh	r0, [r4, #12]
 80012d6:	4305      	orrs	r5, r0
 80012d8:	81a5      	strh	r5, [r4, #12]
 80012da:	e7cd      	b.n	8001278 <__smakebuf_r+0x18>
 80012dc:	080005d1 	.word	0x080005d1

080012e0 <__malloc_lock>:
 80012e0:	4801      	ldr	r0, [pc, #4]	; (80012e8 <__malloc_lock+0x8>)
 80012e2:	f7ff ba47 	b.w	8000774 <__retarget_lock_acquire_recursive>
 80012e6:	bf00      	nop
 80012e8:	20000090 	.word	0x20000090

080012ec <__malloc_unlock>:
 80012ec:	4801      	ldr	r0, [pc, #4]	; (80012f4 <__malloc_unlock+0x8>)
 80012ee:	f7ff ba42 	b.w	8000776 <__retarget_lock_release_recursive>
 80012f2:	bf00      	nop
 80012f4:	20000090 	.word	0x20000090

080012f8 <_free_r>:
 80012f8:	b538      	push	{r3, r4, r5, lr}
 80012fa:	4605      	mov	r5, r0
 80012fc:	2900      	cmp	r1, #0
 80012fe:	d045      	beq.n	800138c <_free_r+0x94>
 8001300:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001304:	1f0c      	subs	r4, r1, #4
 8001306:	2b00      	cmp	r3, #0
 8001308:	bfb8      	it	lt
 800130a:	18e4      	addlt	r4, r4, r3
 800130c:	f7ff ffe8 	bl	80012e0 <__malloc_lock>
 8001310:	4a1f      	ldr	r2, [pc, #124]	; (8001390 <_free_r+0x98>)
 8001312:	6813      	ldr	r3, [r2, #0]
 8001314:	4610      	mov	r0, r2
 8001316:	b933      	cbnz	r3, 8001326 <_free_r+0x2e>
 8001318:	6063      	str	r3, [r4, #4]
 800131a:	6014      	str	r4, [r2, #0]
 800131c:	4628      	mov	r0, r5
 800131e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001322:	f7ff bfe3 	b.w	80012ec <__malloc_unlock>
 8001326:	42a3      	cmp	r3, r4
 8001328:	d90b      	bls.n	8001342 <_free_r+0x4a>
 800132a:	6821      	ldr	r1, [r4, #0]
 800132c:	1862      	adds	r2, r4, r1
 800132e:	4293      	cmp	r3, r2
 8001330:	bf04      	itt	eq
 8001332:	681a      	ldreq	r2, [r3, #0]
 8001334:	685b      	ldreq	r3, [r3, #4]
 8001336:	6063      	str	r3, [r4, #4]
 8001338:	bf04      	itt	eq
 800133a:	1852      	addeq	r2, r2, r1
 800133c:	6022      	streq	r2, [r4, #0]
 800133e:	6004      	str	r4, [r0, #0]
 8001340:	e7ec      	b.n	800131c <_free_r+0x24>
 8001342:	461a      	mov	r2, r3
 8001344:	685b      	ldr	r3, [r3, #4]
 8001346:	b10b      	cbz	r3, 800134c <_free_r+0x54>
 8001348:	42a3      	cmp	r3, r4
 800134a:	d9fa      	bls.n	8001342 <_free_r+0x4a>
 800134c:	6811      	ldr	r1, [r2, #0]
 800134e:	1850      	adds	r0, r2, r1
 8001350:	42a0      	cmp	r0, r4
 8001352:	d10b      	bne.n	800136c <_free_r+0x74>
 8001354:	6820      	ldr	r0, [r4, #0]
 8001356:	4401      	add	r1, r0
 8001358:	1850      	adds	r0, r2, r1
 800135a:	4283      	cmp	r3, r0
 800135c:	6011      	str	r1, [r2, #0]
 800135e:	d1dd      	bne.n	800131c <_free_r+0x24>
 8001360:	6818      	ldr	r0, [r3, #0]
 8001362:	685b      	ldr	r3, [r3, #4]
 8001364:	6053      	str	r3, [r2, #4]
 8001366:	4401      	add	r1, r0
 8001368:	6011      	str	r1, [r2, #0]
 800136a:	e7d7      	b.n	800131c <_free_r+0x24>
 800136c:	d902      	bls.n	8001374 <_free_r+0x7c>
 800136e:	230c      	movs	r3, #12
 8001370:	602b      	str	r3, [r5, #0]
 8001372:	e7d3      	b.n	800131c <_free_r+0x24>
 8001374:	6820      	ldr	r0, [r4, #0]
 8001376:	1821      	adds	r1, r4, r0
 8001378:	428b      	cmp	r3, r1
 800137a:	bf04      	itt	eq
 800137c:	6819      	ldreq	r1, [r3, #0]
 800137e:	685b      	ldreq	r3, [r3, #4]
 8001380:	6063      	str	r3, [r4, #4]
 8001382:	bf04      	itt	eq
 8001384:	1809      	addeq	r1, r1, r0
 8001386:	6021      	streq	r1, [r4, #0]
 8001388:	6054      	str	r4, [r2, #4]
 800138a:	e7c7      	b.n	800131c <_free_r+0x24>
 800138c:	bd38      	pop	{r3, r4, r5, pc}
 800138e:	bf00      	nop
 8001390:	20000084 	.word	0x20000084

08001394 <_read_r>:
 8001394:	b538      	push	{r3, r4, r5, lr}
 8001396:	4d07      	ldr	r5, [pc, #28]	; (80013b4 <_read_r+0x20>)
 8001398:	4604      	mov	r4, r0
 800139a:	4608      	mov	r0, r1
 800139c:	4611      	mov	r1, r2
 800139e:	2200      	movs	r2, #0
 80013a0:	602a      	str	r2, [r5, #0]
 80013a2:	461a      	mov	r2, r3
 80013a4:	f7fe ffdc 	bl	8000360 <_read>
 80013a8:	1c43      	adds	r3, r0, #1
 80013aa:	d102      	bne.n	80013b2 <_read_r+0x1e>
 80013ac:	682b      	ldr	r3, [r5, #0]
 80013ae:	b103      	cbz	r3, 80013b2 <_read_r+0x1e>
 80013b0:	6023      	str	r3, [r4, #0]
 80013b2:	bd38      	pop	{r3, r4, r5, pc}
 80013b4:	20000098 	.word	0x20000098

080013b8 <_fstat_r>:
 80013b8:	b538      	push	{r3, r4, r5, lr}
 80013ba:	4d07      	ldr	r5, [pc, #28]	; (80013d8 <_fstat_r+0x20>)
 80013bc:	2300      	movs	r3, #0
 80013be:	4604      	mov	r4, r0
 80013c0:	4608      	mov	r0, r1
 80013c2:	4611      	mov	r1, r2
 80013c4:	602b      	str	r3, [r5, #0]
 80013c6:	f7ff f80f 	bl	80003e8 <_fstat>
 80013ca:	1c43      	adds	r3, r0, #1
 80013cc:	d102      	bne.n	80013d4 <_fstat_r+0x1c>
 80013ce:	682b      	ldr	r3, [r5, #0]
 80013d0:	b103      	cbz	r3, 80013d4 <_fstat_r+0x1c>
 80013d2:	6023      	str	r3, [r4, #0]
 80013d4:	bd38      	pop	{r3, r4, r5, pc}
 80013d6:	bf00      	nop
 80013d8:	20000098 	.word	0x20000098

080013dc <_isatty_r>:
 80013dc:	b538      	push	{r3, r4, r5, lr}
 80013de:	4d06      	ldr	r5, [pc, #24]	; (80013f8 <_isatty_r+0x1c>)
 80013e0:	2300      	movs	r3, #0
 80013e2:	4604      	mov	r4, r0
 80013e4:	4608      	mov	r0, r1
 80013e6:	602b      	str	r3, [r5, #0]
 80013e8:	f7ff f80d 	bl	8000406 <_isatty>
 80013ec:	1c43      	adds	r3, r0, #1
 80013ee:	d102      	bne.n	80013f6 <_isatty_r+0x1a>
 80013f0:	682b      	ldr	r3, [r5, #0]
 80013f2:	b103      	cbz	r3, 80013f6 <_isatty_r+0x1a>
 80013f4:	6023      	str	r3, [r4, #0]
 80013f6:	bd38      	pop	{r3, r4, r5, pc}
 80013f8:	20000098 	.word	0x20000098

080013fc <_init>:
 80013fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013fe:	bf00      	nop
 8001400:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001402:	bc08      	pop	{r3}
 8001404:	469e      	mov	lr, r3
 8001406:	4770      	bx	lr

08001408 <_fini>:
 8001408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800140a:	bf00      	nop
 800140c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800140e:	bc08      	pop	{r3}
 8001410:	469e      	mov	lr, r3
 8001412:	4770      	bx	lr
